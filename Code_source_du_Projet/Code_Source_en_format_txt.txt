classdef projet_utilitaire < matlab.apps.AppBase

    % Properties that correspond to app components
    properties (Access = public)
        fen                            matlab.ui.Figure
        tableauM                       matlab.ui.container.TabGroup
        tabMath                        matlab.ui.container.Tab
        TypedoperationsMat             matlab.ui.control.Label
        typeOperation                  matlab.ui.control.DropDown
        trace_det_trans                matlab.ui.container.Panel
        resultat_trace_det_tranc       matlab.ui.container.Panel
        determinant                    matlab.ui.container.Panel
        traces                         matlab.ui.container.Panel
        tansBtn                        matlab.ui.control.Button
        detBtn                         matlab.ui.control.Button
        transposee                     matlab.ui.container.Panel
        traceBtn                       matlab.ui.control.Button
        detSource                      matlab.ui.container.Panel
        determinant_2                  matlab.ui.container.Panel
        NombredecolonneLabel_2         matlab.ui.control.Label
        detCol                         matlab.ui.control.Spinner
        NombredeligneLabel             matlab.ui.control.Label
        detLign                        matlab.ui.control.Spinner
        validTrans                     matlab.ui.control.Button
        sommProduitmat                 matlab.ui.container.Panel
        premierMat                     matlab.ui.container.Panel
        secondMat                      matlab.ui.container.Panel
        btnProduit                     matlab.ui.control.Button
        btnSomme                       matlab.ui.control.Button
        resultProd                     matlab.ui.container.Panel
        resultSom                      matlab.ui.container.Panel
        DimensionPremirematricePanel   matlab.ui.container.Panel
        LigneLabel                     matlab.ui.control.Label
        lign_mat1                      matlab.ui.control.Spinner
        ColonneLabel                   matlab.ui.control.Label
        col_mat1                       matlab.ui.control.Spinner
        validMat1                      matlab.ui.control.Button
        DimensionsecondMatricePanel    matlab.ui.container.Panel
        LigneLabel_2                   matlab.ui.control.Label
        lign_mat2                      matlab.ui.control.Spinner
        ColonneLabel_2                 matlab.ui.control.Label
        col_mat2                       matlab.ui.control.Spinner
        validMat2                      matlab.ui.control.Button
        decoMat                        matlab.ui.container.Panel
        decoSource                     matlab.ui.container.Panel
        NombredeligneSpinner_4Label_4  matlab.ui.control.Label
        decoLign                       matlab.ui.control.Spinner
        NombredecolonneSpinner_4Label_4  matlab.ui.control.Label
        decoCol                        matlab.ui.control.Spinner
        ordreDeco                      matlab.ui.control.Button
        decoSvd                        matlab.ui.control.Button
        decoNorm                       matlab.ui.control.Button
        decoResult                     matlab.ui.container.Panel
        norme                          matlab.ui.container.Panel
        singuliere                     matlab.ui.container.Panel
        btnCh                          matlab.ui.control.Button
        btnQR                          matlab.ui.control.Button
        resCh                          matlab.ui.container.Panel
        resQR                          matlab.ui.container.Panel
        ValQ                           matlab.ui.container.Panel
        ValR                           matlab.ui.container.Panel
        eqLineaire                     matlab.ui.container.Panel
        eqSourceMat                    matlab.ui.container.Panel
        eqSecond                       matlab.ui.container.Panel
        eqResultBtn                    matlab.ui.control.Button
        eqOrdreBtn                     matlab.ui.control.Button
        eqResultat                     matlab.ui.container.Panel
        eqResultVariable               matlab.ui.container.Panel
        eqResultValeur                 matlab.ui.container.Panel
        eqNomVar                       matlab.ui.container.Panel
        vectSourceMat_3                matlab.ui.container.Panel
        NombredesquationsLabel         matlab.ui.control.Label
        eqLign                         matlab.ui.control.Spinner
        NombredesinconnuesLabel        matlab.ui.control.Label
        eqCol                          matlab.ui.control.Spinner
        vect_val_Mat                   matlab.ui.container.Panel
        vectSourceMat                  matlab.ui.container.Panel
        vectResultat                   matlab.ui.container.Panel
        vectP                          matlab.ui.container.Panel
        valP                           matlab.ui.container.Panel
        vectResultBtn                  matlab.ui.control.Button
        vectOrdreBtn                   matlab.ui.control.Button
        dimVectP                       matlab.ui.container.Panel
        NombredecolonneSpinner_4Label_5  matlab.ui.control.Label
        vectCol                        matlab.ui.control.Spinner
        NombredeligneSpinner_4Label_5  matlab.ui.control.Label
        vectLign                       matlab.ui.control.Spinner
        invMat                         matlab.ui.container.Panel
        invSourceMat                   matlab.ui.container.Panel
        invResultMat                   matlab.ui.container.Panel
        invResultBtn                   matlab.ui.control.Button
        ValiderButton                  matlab.ui.control.Button
        DimensiondelaMatricePanel      matlab.ui.container.Panel
        NombredeligneSpinnerLabel      matlab.ui.control.Label
        invLign                        matlab.ui.control.Spinner
        NombredecolonneLabel_3         matlab.ui.control.Label
        invColon                       matlab.ui.control.Spinner
        Button                         matlab.ui.control.Button
        Button_2                       matlab.ui.control.StateButton
        retournAccueilMath             matlab.ui.control.Button
        panAccueilMat                  matlab.ui.container.Panel
        vectResultat_2                 matlab.ui.container.Panel
        vectSourceMat_8                matlab.ui.container.Panel
        lab4                           matlab.ui.control.Label
        allerAuSignalBtn               matlab.ui.control.Button
        matNB                          matlab.ui.control.TextArea
        vectSourceMat_4                matlab.ui.container.Panel
        vectSourceMat_6                matlab.ui.container.Panel
        matCloseBtn                    matlab.ui.control.Button
        aproposMath                    matlab.ui.control.Button
        aideMath                       matlab.ui.control.Button
        matBienvenu                    matlab.ui.control.TextArea
        vectSourceMat_5                matlab.ui.container.Panel
        tabSign                        matlab.ui.container.Tab
        panMenu                        matlab.ui.container.Panel
        traceFonctionSimple            matlab.ui.control.Button
        transformerFourier             matlab.ui.control.Button
        traceConvolution               matlab.ui.control.Button
        TracagedunBruit                matlab.ui.control.Button
        menuClose                      matlab.ui.control.Button
        CloseButton                    matlab.ui.control.Button
        tracageEchelon                 matlab.ui.control.Button
        aideSignal                     matlab.ui.control.Button
        Tracagedunsignaldedirac        matlab.ui.control.Button
        accueilSignal                  matlab.ui.control.Button
        apropos                        matlab.ui.control.Button
        TraitementdesignalLabel        matlab.ui.control.Label
        labTitre                       matlab.ui.control.Label
        panSimpleFunction              matlab.ui.container.Panel
        FonctionEditFieldLabel         matlab.ui.control.Label
        simpleFonction                 matlab.ui.control.EditField
        axeSimple                      matlab.ui.control.UIAxes
        traceSignalSimple              matlab.ui.control.Button
        BornedelavariablePanel         matlab.ui.container.Panel
        pasSpinnerLabel                matlab.ui.control.Label
        pasInterval                    matlab.ui.control.Spinner
        infSpinnerLabel                matlab.ui.control.Label
        bornInf                        matlab.ui.control.Spinner
        supSpinnerLabel                matlab.ui.control.Label
        bornSup                        matlab.ui.control.Spinner
        transformFourier               matlab.ui.container.Panel
        FonctionEditFieldLabel_5       matlab.ui.control.Label
        fourierFunction                matlab.ui.control.EditField
        fourierTransformebtn           matlab.ui.control.Button
        borneTransFourier              matlab.ui.container.Panel
        pasSpinnerLabel_5              matlab.ui.control.Label
        pasFourier                     matlab.ui.control.Spinner
        infSpinnerLabel_5              matlab.ui.control.Label
        infFourier                     matlab.ui.control.Spinner
        supSpinnerLabel_5              matlab.ui.control.Label
        supFourier                     matlab.ui.control.Spinner
        optionBtn                      matlab.ui.container.ButtonGroup
        dimensionSimple                matlab.ui.control.RadioButton
        deuxDimension                  matlab.ui.control.RadioButton
        nDimension                     matlab.ui.control.RadioButton
        axeOrigineFourier              matlab.ui.control.UIAxes
        axeInversFourier               matlab.ui.control.UIAxes
        axeTransformer                 matlab.ui.control.UIAxes
        signalBruit                    matlab.ui.container.Panel
        FonctionEditFieldLabel_11      matlab.ui.control.Label
        foncSignalBruit                matlab.ui.control.EditField
        traceSignaBruit                matlab.ui.control.Button
        bornBruit                      matlab.ui.container.Panel
        pasSpinnerLabel_10             matlab.ui.control.Label
        t0B                            matlab.ui.control.Spinner
        infSpinnerLabel_10             matlab.ui.control.Label
        amplitudeB                     matlab.ui.control.Spinner
        periodeTBruit                  matlab.ui.control.Label
        periodeB                       matlab.ui.control.Spinner
        axeSignalAvecBruit             matlab.ui.control.UIAxes
        FonctionEditFieldLabel_12      matlab.ui.control.Label
        foncBruit                      matlab.ui.control.EditField
        axeResBruit                    matlab.ui.control.UIAxes
        signalDirac                    matlab.ui.container.Panel
        FonctionEditFieldLabel_13      matlab.ui.control.Label
        foncDirac                      matlab.ui.control.EditField
        tracerDirac                    matlab.ui.control.Button
        BorneDirac                     matlab.ui.container.Panel
        diracLabelT0                   matlab.ui.control.Label
        t0Dirac                        matlab.ui.control.Spinner
        amplitudDiracLabel             matlab.ui.control.Label
        amplitudeDirac                 matlab.ui.control.Spinner
        periodeTDiracLabel             matlab.ui.control.Label
        periodeDirac                   matlab.ui.control.Spinner
        axeDirac                       matlab.ui.control.UIAxes
        diracOptionBouton              matlab.ui.container.ButtonGroup
        optionDirac                    matlab.ui.control.RadioButton
        optionRectagnle                matlab.ui.control.RadioButton
        optionTriangle                 matlab.ui.control.RadioButton
        optionEchelon                  matlab.ui.control.RadioButton
        BorneDirac_2                   matlab.ui.container.Panel
        amplitudDiracLabel_2           matlab.ui.control.Label
        amplitudDiracLabel_3           matlab.ui.control.Label
        amplitudDiracLabel_4           matlab.ui.control.Label
        amplitudDiracLabel_6           matlab.ui.control.Label
        panConvolution                 matlab.ui.container.Panel
        rectangleLabelFunc             matlab.ui.control.Label
        foncConv1                      matlab.ui.control.EditField
        tracerConvolution              matlab.ui.control.Button
        BorneConvolution               matlab.ui.container.Panel
        rectangleLabelT0               matlab.ui.control.Label
        freqConv                       matlab.ui.control.Spinner
        amplitudRectangleLabel         matlab.ui.control.Label
        infConv                        matlab.ui.control.Spinner
        periodeRectangleLabel          matlab.ui.control.Label
        supConv                        matlab.ui.control.Spinner
        rectangleLabelFunc_2           matlab.ui.control.Label
        foncConv2                      matlab.ui.control.EditField
        axeConvolution                 matlab.ui.control.UIAxes
        panSign                        matlab.ui.container.Panel
        functionPeriodique_2           matlab.ui.control.Label
        fonctionSign                   matlab.ui.control.EditField
        signBoutonValider              matlab.ui.control.Button
        signOption                     matlab.ui.control.DropDown
        indication_de_sign             matlab.ui.container.Panel
        LatraagedesignedunsgnalsefaitcommececiLabel  matlab.ui.control.Label
        stsignt1sit0etLabel            matlab.ui.control.Label
        stsignt1sit0Label              matlab.ui.control.Label
        axeSign                        matlab.ui.control.UIAxes
        menuShow                       matlab.ui.control.Button
        panAccueilS                    matlab.ui.container.Panel
        titreSignal                    matlab.ui.container.Panel
        contenu2S                      matlab.ui.container.Panel
        closeSignal                    matlab.ui.control.Button
        allerMath                      matlab.ui.control.Button
        signRetourneAccueil            matlab.ui.control.Button
        labTitre_14                    matlab.ui.control.Label
        contenu1S                      matlab.ui.container.Panel
        vectSourceMat_9                matlab.ui.container.Panel
        lab4_3                         matlab.ui.control.Label
        signalIndication               matlab.ui.control.TextArea
        bienvenuAccueil                matlab.ui.control.TextArea
        tabImg                         matlab.ui.container.Tab
        accueil                        matlab.ui.container.Panel
        accueilP                       matlab.ui.container.Panel
        labAccueil                     matlab.ui.control.Label
        panT                           matlab.ui.container.Panel
        modUtil                        matlab.ui.container.Panel
        lab1_2                         matlab.ui.control.Label
        lab2_2                         matlab.ui.control.Label
        lab4_2                         matlab.ui.control.Label
        lab3_2                         matlab.ui.control.Label
        versionLog                     matlab.ui.control.Label
        principal_Aller_au_Math        matlab.ui.control.Button
        principalAller_auSignal        matlab.ui.control.Button
        principal_Aide                 matlab.ui.control.Button
        principal_Apropos              matlab.ui.control.Button
        quitPrincipalBtn               matlab.ui.control.Button
        titre                          matlab.ui.control.Label
    end

    
    properties (Access = public)
        Matrice,transpos;
        inverse,panelS;
        vector,mat1,mat2;
        srcs,resVarName;
        m,deco,seconde;
        equation,somMat,prodMat,allbouton,allpanel;
        activee = '';
    end
    
    properties (Access = private)
    end
    
    methods (Access = public)
        
        function [matrice] = new_mat(app,varPanel,background,forground,ln,cl)
            [tmp,a,b,x,y,w,h] = app.positions(varPanel,ln,cl);
            for i = 1:ln
                for j = 1:cl
                    mat(i,j) = uieditfield(varPanel,'numeric','HorizontalAlignment','center');
                    mat(i,j).Position = [ x y w h ];
                    mat(i,j).BackgroundColor = background;
                    mat(i,j).FontColor = forground;
                    x = x + w + a ;
                end
                x = tmp ;
                y = y - ( h + b );
            end
            matrice = mat;
            return
        end        
        
        function [rs] = getMatrice(app,mat,ln,cl)
            try
                for i = 1:ln
                    for j = 1:cl
                        rs(i,j) = mat(i,j).Value;                       
                    end
                end
            catch
                warndlg('Valeur dee la matrice n''est pas valide !','Invalide valeur');
            end
        end        
        
        function [activ] = panelActiver(app,panelActif,source,nbr)
            
            for i = 1 : nbr
                if ( source(i) == panelActif )
                    source(i).Visible = 'on' ;
                    activ = panelActif ;
                else
                    source(i).Visible = 'off' ; 
                end
            end
            return
        end
        
        function actualiser(app,panelCourante)
            if ( panelCourante.Children ~= 0 )
                delete(panelCourante.Children);
            end
        end        
        
        function [reponse] = existe(app,objet)
            if(objet.Children ~= 0)
                reponse = 'true';
            else
                reponse = 'false';
            end
        end        

        function panActiv = testActive(app,panSignal,nombre);
            for i = 1 : 1 : nombre
                if (panSignal(i).Visible == 'on')
                    panActiv = panSignal(i);
                    break;
                end
            end
        end        

        function libererPanel(app,panelActif)
            if(panelActif.Children ~= 0 )
                delete(panelActif.Children);
            end
        end
        
        function [tmp,a,b,x,y,w,h] = positions(app,panelActuel,ligne,colonne)
            wid = panelActuel.Position(3);
            heig = panelActuel.Position(4);
            
            hh = heig / (ligne+1) ;
            if  ligne < 5
                h = hh / 2 ;
                z = h / 2 ;
                b = z / (ligne-1) ;
                y = heig - ((z + (z/2))*(ligne+1)) ;
            else
                h = hh / 2 + (hh/(ligne+1)) ;
                z = h / 2 ;
                b = z / (ligne-1) ;
                y = heig - ((z + (z/2))*(ligne+1) - ((ligne/4)*h)) ;
            end 
            
            w = wid/(colonne+1);
            xx = w / 2;
            k = xx / 2;
            a = k / (colonne-1);
            x = k + (k / 2);
            tmp = x ;            
        end        

        function menuCloses(app,panP,panM,panTitle,principalAccueil,titr)
           
            wp = principalAccueil.Position(3); 
            k = 180;
            px = k/2;
            w = wp - k ;
            
            hp = panP.Position(4);            
            d = titr.Position(2);
            x = titr.Position(4);
            y = panTitle.Position(2);
            z = panP.Position(2);
            
            titr.Position = [87 d 1272 x];
            panTitle.Position = [87 y 1272 53];
            principalAccueil.Position = [87 24 1272 600];
            panM.Position = [2 1 1 hp];
            panP.Position = [2 z 1398 hp];
            
            app.modUtil.Position = [px 145 w 339];
            app.versionLog.Position = [680 62 401 20];
        end
        
        function menuShows(app,panP,panM,panTitle,principalAccueil,titr)
            
            wp = principalAccueil.Position(3); 
            k = 180;
            px = k/2;
            w = wp - k ;
            hp = panP.Position(4);
            x = titr.Position(4);
            y = panTitle.Position(2);
            d = titr.Position(2);
            z = panP.Position(2);
            
            titr.Position = [333 766 1065 58];
            panTitle.Position = [57 y 967 53];
            principalAccueil.Position = [57 24 967 600];
            
            app.modUtil.Position = [px 145 w 339];
            app.versionLog.Position = [508 62 401 20];
            
            panM.Position = [2 2 333 hp];
            panP.Position = [334 z 1065 hp];
        end
        
        function boutonActiver(app,boutonActif,source,nbr)
            
            for i = 1 : nbr
                if ( source(i) == boutonActif )
                    if boutonActif == app.accueilSignal
                        boutonActif.BackgroundColor = [0.05 0.17 0.35] ;
                    else
                        source(i).BackgroundColor = [0 0.65 0.65] ;
                    end
                else
                    source(i).BackgroundColor = [0.05 0.17 0.35] ;
                end
            end
        end        

        function selectTableau(app)
            if ( app.tableauM.SelectedTab == app.tabSign )
                app.panAccueilS.Position = [72 2 1328 763]; 
            end
        end 
        
        run(selectTableau);

        function [res] = dim2(app,v,fonc)
	    N = length(v);	
            for (i = 1 : N)
                for(j = 1 : N)
                    xx = v(i);
                    yy = v(j);
                    t(i,j) = xx * yy ;
                end
            end
            for (i = 1 : N)
                for(j = 1 : N)
                    xx = fonc(i);
                    yy = fonc(j);
                    res(i,j) = xx * yy ;
                end
            end
        end
        
        function dirak = diracs(app,f,x)
            for i = 1 :length(x)
                if f(i) > 0
                    k(i) = f(i);
                else
                    k(i) = 0;
                end
            end
            dirak = k;
        end
        
        function rec = rectangle(app,f,x)
            l = length(x);
            for i = 1 :l
                if (x(i) >= -0.5 && x(i) <= 0.5 )
                    f(i) = 1;
                else
                    f(i) = 0;
                end
            end
            rec = f;
        end
        
    end


    methods (Access = private)

        % Button pushed function: CloseButton
        function CloseButtonPushed(app, event)
            close(app.fen);
        end

        % Callback function
        function QUITTERButtonPushed(app, event)
           close(app.fen);
        end

        % Button pushed function: TracagedunBruit
        function TracagedunBruitButtonPushed(app, event)
            app.labTitre.Text = 'Traçage d''un signal avec le Bruit';           
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.TracagedunBruit,app.allbouton,6);
            app.activee = app.panelActiver(app.signalBruit,app.allpanel,7);
            
        end

        % Callback function
        function TracagedunesimplefonctionButtonPushed(app, event)
            app.labTitre.Text = 'Traçage d''une fonction simple';
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.traceFonctionSimple,app.allbouton,6);
            app.activee = app.panelActiver(app.panSimpleFunction,app.allpanel,7);
        end

        % Callback function
        function TracagedunsignaldediracPushed(app, event)
            app.labTitre.Text = 'Signal de Dirac, Rectangle, Triangle,Echelon, Ramp';
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.Tracagedunsignaldedirac,app.allbouton,6);
            app.activee = app.panelActiver(app.signalDirac,app.allpanel,7);
        end

        % Callback function
        function TracagedunsignaltriangulaireButtonPushed(app, event)
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.Tracagedunsignaltriangulaire,app.allbouton,6);
            app.activee = app.panelActiver(app.panAccueilS,app.allpanel,7);
        end

        % Callback function
        function ValiderButtonPushed(app, event)
            cl = app.invColon.Value;
            ln = app.invLign.Value;
            disp(cl);
            if ln == cl
                app.actualiser(app.invSourceMat);
                app.srcs = app.new_mat(app.invSourceMat,[0.2 0.42 0.52],[0.83 0.94 0.95],ln,cl);
                app.actualiser(app.invResultMat);
            else
                errordlg('Le nombre de ligne et nombre de colonne doivent etres égale','Erreur de dimension');
            end
        end

        % Button pushed function: accueilSignal
        function accueilSignalButtonPushed(app, event)
            app.labTitre.Text = 'Page d''accueil du Signal';
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.activee = app.panelActiver(app.panAccueilS,app.allpanel,7);
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon]; 
            app.boutonActiver(app.accueilSignal,app.allbouton,6) ;
        end

        % Button pushed function: Button, aideMath
        function aideMathButtonPushed(app, event)
            aideMaths = 'Dans cette partie vous calcule le matrice \n Donc il faut avoir de connaissance au moins sur le matrice et il faut pas surtout de faire n''import quoi la dessu\n sinon vous aurez un belle petite erreur !\n Vous devez aussi de respecter le reglement de calcul sur la matrice';
            helpdlg(aideMaths,'Aide sur la matrice');
        end

        % Button pushed function: aideSignal
        function aideSignalButtonPushed(app, event)
            l1 = '   ~~~~~~~~~~ Aide sur le traitement de signal ~~~~~~~~~~';
            l2 = '         ____________________________________________';
            l3 = ' Dans cette partie on manipule le signal en tapant le fonction dans la zone de saisie puis valider par un bouton ';
            l4 = ' La validation de la fonction sur la zone de saisie dépant l''écriture correct puis  le nom du variable.';
            l5 = ' Pour éviter les erreurs  sur le fonction, nous devons utilisé un seul unique variable pour tous les options.';
            l6 = 'Alors utiliser le caractère t pour le nom de la variable';
            l7 = ' ~~~~~~~~~~~~~~~~~~~~~~~~~   NB  ~~~~~~~~~~~~~~~~~~~~~~~~~';
            l8 = 'Sur le traçage d''un signal de Dirac, rectangle, triangle ou Echelon, utiliser sinplement le nom du fonction par Exemple : sin(t) ou t simplement au lieu de dirac(sin(t)) ou dirac(t) ou triplus(t) pour le triangle !';
            aide = sprintf('\n\t %s\n\t%s\n\n\t\t\t\t\t%s \n\t%s\n\t%s\n\n\t%s\n\n\t%s\n\n\t%s', l1,l2,l3, l4,l5,l6,l7,l8);
            helpdlg(aide,'Aide pour Signal');
        end

        % Button pushed function: allerAuSignalBtn, 
        % principalAller_auSignal
        function allerAuSignalBtnButtonPushed(app, event)
            app.tableauM.Visible = 'on';
            app.accueil.Visible = 'off';
            app.panAccueilS.Visible = 'on';
            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.activee = app.panelActiver(app.panAccueilS,app.allpanel,7);
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon]; 
            app.boutonActiver(app.accueilSignal,app.allbouton,6) ;
            app.panMenu.Visible = 'off';
            app.menuShow.Visible = 'on';
            app.tableauM.SelectedTab = app.tabSign ;
            app.panAccueilS.Position = [72 2 1328 763]; 
        end

        % Button pushed function: allerMath, principal_Aller_au_Math
        function allerMathButtonPushed(app, event)
            app.tableauM.Visible = 'on';
            app.tableauM.SelectedTab = app.tabMath;
            app.panAccueilMat.Visible = 'on';
            app.accueil.Visible = 'off';
        end

        % Callback function
        function btnChButtonPushed(app, event)
            
            cl = app.decoCol.Value;
            ln = app.decoLign.Value;
            app.actualiser(app.resCh);
            
            if ( app.decoSource.Children ~= 0 )
                
                if ln == cl
                    symetrique = 'true';
                    cholesky = app.getMatrice(app.deco,ln,cl);
                    fprintf("  ==== La determinatnt dela matrice pour Cholesky est : %f \n",det(cholesky));
                     try                        
                         [l,c] = size(cholesky);
                        for x = 1 : l
                            for y =  1 : c
                                while cholesky(x,y) ~= cholesky(y,x)
                                    symetrique = 'false';
                                    break ;
                                end
                            end
                        end
                        if strcmp(symetrique,'false')
                            warndlg('Oups !!... , cette matrice n''est pas symetrique !','Symetric error ');
                        else
                            ch = chol(cholesky);
                            fprintf('\n =============   Cholesky matrix  ============== \n');
                            disp(ch);
                            [lign,col] = size(ch);
                            [tmp,a,b,x,y,w,h] = app.positions(app.resCh,lign,col);
                            
                            for i = 1 : lign
                                for j = 1 : col
                                    resCholesky = uieditfield(app.resCh,'numeric','HorizontalAlignment','center');
                                    resCholesky.Position = [ x y w h ];
                                    resCholesky.Value = ch(i,j);
                                    resCholesky.Editable = 'Off';
                                    resCholesky.Limits = [-1000 1000];
                                    resCholesky.BackgroundColor = [0.23 0.34 0.47];
                                    resCholesky.FontColor = [1 0.92 1];
                                    x = x + w + a ;
                                end
                                x = tmp ;
                                y = y - ( h + b );
                            end
                        end
                        symetrique = 'true';                      
                        
                    catch
                        warndlg('Oups !!... cette matrice n''est pas définie positive !','matrix not defined positive');
                    end                    
                else
                    errordlg('La matrice doivent etre carrée ','Erreur de dimension');
                end
            else
                errordlg('       Vous devez definir la matrice avant de commencer  !                                          Error : [ matrix not found ]','Erreur 404');
            end
        end

        % Callback function
        function btnProduitButtonPushed(app, event)
            
            exist1 = app.existe(app.premierMat);
            exist2 = app.existe(app.secondMat);
            if strcmp(exist1,'true') && strcmp(exist2,'true')
                [l1,c1] = size(app.mat1);
                [l2,c2] = size(app.mat2);
                m1 = app.getMatrice(app.mat1,l1,c1);
                m2 = app.getMatrice(app.mat2,l2,c2);
                if (c1 == l2)
                    produit = m1 * m2 ;                   
                    [tmp,a,b,x,y,w,h] = app.positions(app.resultProd,l1,c2);
                    for i = 1 : l1
                        for j = 1 : c2
                            prod(i,j) = uieditfield(app.resultProd,'numeric','HorizontalAlignment','center');
                            prod(i,j).Value = produit(i,j);
                            prod(i,j).Position = [ x y w h ];
                            prod(i,j).BackgroundColor = [0.55 0.651 0.72];
                            prod(i,j).FontColor = [0.98 1 1 ];
                            x = x + w + a ;
                        end
                        x = tmp ;
                        y = y - ( h + b );
                    end
                else
                    errordlg(' La dimension de ces deux matrice sont incompatible pour la multiplication','Error dimension');
                end
            else
                errordlg('       Vous devez definir la matrice avant de commencer  !                                          Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Callback function
        function btnQRButtonPushed(app, event)
            
            [ln,cl] = size(app.deco);           
            
            if ( app.decoSource.Children ~= 0 )
                app.ValQ.Visible ='on';
                app.ValR.Visible ='on';
                [q,r] = qr(app.getMatrice(app.deco,ln,cl));
                fprintf('\n ===================    la valeur de Q sur la décomposition de la matrice QR    ================\n\n');
                disp(q);
                fprintf(' ===================    la valeur de R sur la décomposition de la matrice QR    ================\n\n');
                disp(r);
                
                app.actualiser(app.ValQ);
                app.actualiser(app.ValR);
                [ql,qc] = size(q);
                
                [tmp,a,b,x,y,w,h] = app.positions(app.ValQ,ql,qc);                
                for i = 1 : ql
                    for j = 1 : qc
                        resQ = uieditfield(app.ValQ,'numeric','HorizontalAlignment','center');
                        resQ.Position = [ x y w h];
                        resQ.Value = q(i,j);
                        resQ.Editable = 'Off';
                        resQ.Limits = [-1000 1000];
                        resQ.BackgroundColor = [0.23 0.34 0.47];
                        resQ.FontColor = [0.1 0.99 0.17];
                        x = x + w + a ;
                    end
                    x = tmp ;
                    y = y - ( h + b );
                end                
                %   ==========================> Insertion de la matrice QR pour la valeur de R   ==========
                
                [rl,rc] = size(r);
                [tmp,a,b,x,y,w,h] = app.positions(app.ValR,rl,rc);
                for i = 1 : rl
                    for j = 1 : rc
                        resR = uieditfield(app.ValR,'numeric','HorizontalAlignment','center');
                        resR.Position = [ x y w h ];
                        resR.Value = r(i,j);
                        resR.Editable = 'Off';
                        resR.Limits = [-1000 1000];
                        resR.BackgroundColor = [0.23 0.34 0.47];
                        resR.FontColor = [0.1 1 1];
                        x = x + w + a ;
                    end
                    x = tmp ;
                    y = y - ( h + b );
                end
            else
                errordlg('       Vous devez definir la matrice avant de commencer  !                                       Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Callback function
        function btnSommeButtonPushed(app, event)
            
            exist1 = app.existe(app.premierMat);
            exist2 = app.existe(app.secondMat);
            if strcmp(exist1,'true') && strcmp(exist2,'true')
                [l1,c1] = size(app.mat1);
                [l2,c2] = size(app.mat2);
                m1 = app.getMatrice(app.mat1,l1,c1);
                m2 = app.getMatrice(app.mat2,l2,c2);
                if (l1 == l2) && (c1 == c2)                    
                    smm = m1 + m2 ;
                    [tmp,a,b,x,y,w,h] = app.positions(app.resultSom,l1,c1);
                    for i = 1 : l1
                        for j = 1 : c1
                            som(i,j) = uieditfield(app.resultSom,'numeric','HorizontalAlignment','center');
                            som(i,j).Value = smm(i,j);
                            som(i,j).Position = [ x y w h ];
                            som(i,j).BackgroundColor = [0.57 0.6 0.67];
                            som(i,j).FontColor = [0.98 1 1 ];
                            x = x + w + a ;
                        end
                        x = tmp ;
                        y = y - ( h + b );
                    end                    
                else
                    errordlg(' La dimension de ces deux matrice sont incompatible pour l''addition ','Error dimension');
                end
            else
                errordlg('       Vous devez definir la matrice avant de commencer  !                                          Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Button pushed function: closeSignal
        function closeSignalButtonPushed(app, event)
            close(app.fen);
        end

        % Callback function
        function decoNormButtonPushed(app, event)
            [ln,cl] = size(app.deco);
            
            app.actualiser(app.norme);
            if ( app.decoSource.Children ~= 0 )
                
                normDec = norm(app.getMatrice(app.deco,ln,cl));
                app.norme.Visible = 'on';
                fprintf('\n\n ===================    La matrice  A  ================\n\n');
                disp(app.getMatrice(app.deco,ln,cl));
                fprintf('\n\n ===================    La norme de la matrice  A  ================\n\n');
                disp(normDec);
                
                resNorm = uieditfield(app.norme,'numeric','HorizontalAlignment','center');
                resNorm.Position = [ 70 150 100 60 ];
                resNorm.BackgroundColor = [0.23 0.34 0.47];
                resNorm.FontColor = [1 .8 .0 ];
                resNorm.Value = normDec;
                resNorm.Editable = 'Off';
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Callback function
        function decoSvdButtonPushed(app, event)
            [ln,cl] = size(app.deco);
            if(app.decoSource.Children ~= 0)
                
                app.actualiser(app.singuliere);
                app.singuliere.Visible ='on';
                singlDec = svd(app.getMatrice(app.deco,ln,cl));
                fprintf(' ===================    la matrice singulière    ================\n\n');
                disp(singlDec);
                [l,c] = size(singlDec);
                
                [tmp,a,b,x,y,w,h] = app.positions(app.singuliere,l,c);                
                for i = 1 : l
                    for j = 1 : c                        
                        resSingl = uieditfield(app.singuliere,'numeric','HorizontalAlignment','center');
                        resSingl.Position = [ x y w h ];
                        resSingl.Value = singlDec(i,j);
                        resSingl.Editable = 'Off';
                        resSingl.BackgroundColor = [0.23 0.34 0.47];
                        resSingl.FontColor = [1 1 .8];
                        resSingl.Limits = [-1000 1000];
                        x = x + w + a ;
                    end
                    x = tmp ;
                    y = y - ( h + b );
                end
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end
        end

        % Callback function
        function detBtnButtonPushed(app, event)
            if (app.detSource.Children ~= 0 )
                [l,c] = size(app.transpos);
                if (l == c )
                    app.determinant.Visible = 'on';            
                    app.actualiser(app.determinant);
                    disp('============ La matrice A   ============');
                    disp(app.getMatrice(app.transpos,l,c));
                    fprintf(' \n\n ==================  Le determinantde A est :  ========================\n ');
                    res = det(app.getMatrice(app.transpos,l,c));
                    disp(res);
                    determinants = uieditfield(app.determinant,'numeric','HorizontalAlignment','center');
                    determinants.Position = [ 120 140 115 50 ];
                    determinants.Value = res;
                    determinants.BackgroundColor = [0.24 0.39 0.52];
                    determinants.FontColor = [1 1 .8];
                    determinants.Editable = 'Off';
                else
                    warndlg('Pour calculer le déterminant, il faut que la dimension de la matrice soit carrée !','Warning dimension');
                end
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Selection changed function: diracOptionBouton
        function diracOptionBoutonSelectionChanged(app, event)
            selectedButton = app.diracOptionBouton.SelectedObject;
            
            if  strcmp(app.foncDirac.Value,'')                
                errordlg('Vous devez definir la fonction !','Fonctionvides');            
            else
                T = app.periodeDirac.Value ;
                k = 1/T;
                t = -10 : k : 10 ;
                t0 = app.t0Dirac.Value ;
                a = lower(app.amplitudeDirac.Value) ;
                
                
                switch (selectedButton.Text)  
                    case 'Trace de dirac' 
                    try
                        y = eval(lower(app.foncDirac.Value));
                        f = app.diracs(y,t)
                        stem(app.axeDirac,t,f,'c');
                    catch
                        errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                    end
                    case 'Trace d''un rectangle'
                        try
                            k = k * 1/1000 ;
                            t = -1 : k : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*app.rectangle(y,t)
                            plot(app.axeDirac,t,f,'y');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end
                    case 'Trace d''un triangle'
                        try
                            k = k * 1/1000 ;
                            t = -1 : k : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*tripuls(y)
                            plot(app.axeDirac,t,f,'g');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end 
                    case 'Trace d''échelon'
                        try
                            t = -1 : 0.001 : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*heaviside(y)
                            plot(app.axeDirac,t,f,'m');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end 
                 end   
            end              
        end

        % Callback function
        function eqOrdreBtnButtonPushed(app, event)
            col = app.eqCol.Value;
            lign = app.eqLign.Value;
            
            app.actualiser(app.eqResultValeur);
            app.actualiser(app.eqResultVariable);
            app.actualiser(app.eqNomVar);
            
            app.eqResultVariable.Visible = 'off';
            app.eqResultValeur.Visible = 'off';
            
            [tmp,a,b,x,y,w,h] = app.positions(app.eqNomVar,lign,col);
            
            for i = 1 : col
                for k =1 : 1
                    varName(i,k) = uieditfield(app.eqNomVar,'text','HorizontalAlignment','center');
                    varName(i,k).Position = [ x 20 w 40 ];
                    varName(i,k).BackgroundColor = [0.23 0.34 0.47];
                    varName(i,k).FontColor = [1 0.9 0.9];                    
                    x = x + w + a ;
                end
            end
            app.resVarName = varName;
            
            [tmp,a,b,x,y,w,h] = app.positions(app.eqSecond,lign,col);
            app.actualiser(app.eqSecond);
            for t = 1 : lign
                for l = 1 : 1
                    secd(t,l) = uieditfield(app.eqSecond,'numeric','HorizontalAlignment','center');
                    secd(t,l).Position = [ 30 y 110 h ];
                    secd(t,l).BackgroundColor = [0.23 0.34 0.47];
                    secd(t,l).FontColor = [1 0.85 0.95];
                end
                y = y - ( h + b );
            end
            app.seconde = secd;
            app.actualiser(app.eqSourceMat);
            app.equation = app.new_mat(app.eqSourceMat,[0.23 0.34 0.47],[0.9 1 0.98],lign,col);
        end

        % Callback function
        function eqResultBtnButtonPushed(app, event)
            
            if (app.eqSourceMat.Children ~= 0 )
                [ln,cl] = size(app.equation);
                resEq = app.getMatrice(app.equation,ln,cl);
                disp('   ===============  Le système d''équation linéaire   ============== ');
                disp(resEq);
                secd = app.getMatrice(app.seconde,ln,1);
                disp(secd)
                eqResult = resEq\secd;
                fprintf(' \n\n  ===============  Le système d''équation linéaire pour la second membre   ============== \n\n');
                disp(eqResult);
                [l,c] = size(app.resVarName);
                app.eqResultVariable.Visible = 'on';
                app.eqResultValeur.Visible = 'on';
                for i = 1 : l
                    if strcmp(app.resVarName(i,1).Value,'')
                        vide ='true';
                        break;
                    else                         
                        vide ='false';
                    end
                end
                if (strcmp(vide,'true'))
                    errordlg('Vous devez donner le nom des variables !','Nom du variable non complet');
                else
                    while strcmp(vide,'false')
                        for i = 1 : l
                            for k = 1 : l
                                if i ~= k
                                    if strcmp(lower(app.resVarName(i,1).Value),lower(app.resVarName(k,1).Value))
                                       doublant = 'true';
                                       break;
                                    else
                                       doublant = 'false';
                                    end
                                end
                            end
                            if strcmp(doublant,'true')
                                break;
                            else
                            end
                        end
                        if strcmp(doublant,'true')
                            errordlg('Le nom de la variable doivent etres différant , Veuillez le corrigée !','Doublant sur le nom du variable');
                        else
                            varN = app.getMatrice(app.resVarName,l,c);                            
                            app.actualiser(app.eqResultVariable);
                            
                            g = 100 - (5* cl)-30;
                            h = 180 - (180/2) - g ;
                            f = 300 + (5*cl);
                            for i = 1 : l
                                for j = 1 : c                                    
                                    afVar = uieditfield(app.eqResultVariable,'text','HorizontalAlignment','center');                                   
                                    afVar.Value = varN(i,j);                                
                                    afVar.Position = [ 50 f 200 g ];
                                    afVar.BackgroundColor = [0.23 0.34 0.47];
                                    afVar.FontColor = [1 .95 .9 ];
                                end
                                f = f - g - 10;
                            end
                            disp(varN);
                            app.actualiser(app.eqResultValeur);
                            g = 100 - (5* cl)-30;
                            h = 180 - (180/2) - g ;
                            f = 300 + (5*cl);
                            for i = 1 : l
                                for j = 1 : c
                                    afVal(i,j) = uieditfield(app.eqResultValeur,'numeric','HorizontalAlignment','center');
                                    afVal(i,j).Value = eqResult(i,j);
                                    afVal(i,j).Position = [ 70 f 200 g ];
                                    afVal(i,j).BackgroundColor = [0.23 0.34 0.47];
                                    afVal(i,j).FontColor = [0 1 1 ];
                                end
                                f = f - g - 10;
                            end
                        end                        
                        vide = 'true';
                    end
                end  
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end
        end

        % Callback function
        function fourierTransformebtnButtonPushed(app, event)
            
            domaine = app.infFourier.Value : app.pasFourier.Value : app.supFourier.Value ;               
            y  = lower(app.fourierFunction.Value);             
                          
             try
                 
                 title(app.axeOrigineFourier,strcat('Courbe de la fonction : ',y));
                 title(app.axeTransformer,strcat('Transformé de fourier de la fonction : ',y));
                 title(app.axeInversFourier,strcat('Inverse de la transformé de fourier du fonction : ',y));
               
                if ( app.dimensionSimple.Value == true )  
                    t = domaine;
                    g = eval(y);
                    f = fft(g);
                    
                    plot(app.axeOrigineFourier,t,g,'y');
                    plot(app.axeTransformer,t,f,'m');
                    plot(app.axeInversFourier,t,ifft(f),'c');
                    
                elseif ( app.deuxDimension.Value == true )
                    t = domaine;
                    g = eval(y);                    
                    fc = app.dim2(domaine,g)                    
                    f = fft2(fc);
                    plot(app.axeOrigineFourier,t,fc,'y');                    
                    plot(app.axeTransformer,t,f,'m');
                    plot(app.axeInversFourier,t,ifft2(f),'c');
                else
                    t = domaine;
                    g = eval(y);
                    
                    try
                        f = app.dim2(domaine,g); 
                        surfl(f);
                        k = fftn(g);
                        plot(app.axeOrigineFourier,g,'y');
                        plot(app.axeTransformer,domaine,k,'m');
                        plot(app.axeInversFourier,t,ifftn(k),'c');
                    catch
                        warndlg('Warning : [ function not supported ! ]','Warning fonction');
                    end
                    
                end
            catch
                errordlg('Fonction invalide !  Veuillez le verifier','Erreur fonction');
            end
        end

        % Callback function
        function invResultBtnButtonPushed(app, event)
            
            if app.invSourceMat.Children ~= 0
                app.actualiser(app.invResultMat);
                [ln,cl] = size(app.srcs);                
                resInv = app.getMatrice(app.srcs,ln, cl);
                disp(resInv);
                if det(resInv) == 0
                    warndlg(' Cette matrice n''est pas inversible ','Error');
                else                
                    fprintf(' \n ====================    Voicie la matrice carré      ====================  \n');
                    disp(resInv);
                    fprintf('  \n ==================    Et voicie son inverse     ====================== \n ');
                    invers = inv(resInv);
                    disp(invers);
                    
                    [tmp,a,b,x,y,w,h] = app.positions(app.invResultMat,ln,cl);
                    
                    for i = 1:ln
                        for j = 1:cl
                            invres(i,j) = uieditfield(app.invResultMat,'numeric','HorizontalAlignment','center');
                            invres(i,j).Position = [ x y  w h ];
                            invres(i,j).Value = invers(i,j);
                            invres(i,j).Editable = 'Off';
                            invres(i,j).Limits = [-1000 1000];
                            invres(i,j).BackgroundColor = [0.2 0.42 0.52];
                            invres(i,j).FontColor = [ 1 1 1 ];
                            x = x + w + a ;
                        end
                        x = tmp ;
                        y = y - ( h + b );
                    end
                end                
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Callback function
        function matBtnButtonPushed(app, event)
           app.accueil.Visible = 'off';
           app.tableauM.Visible = 'on';
           app.panAccueilMat.Visible = 'on';
        end

        % Button pushed function: matCloseBtn
        function matCloseBtnButtonPushed(app, event)
            close(app.fen);
        end

        % Callback function
        function menuCloseButtonPushed(app, event)
            if strcmp(app.activee,'')
                app.activee = app.panAccueilS ;
                h = app.activee.Position(4);
                k = app.tabSign.Position(3);
                w = k - 72 ; 
                app.activee.Position = [72 2 w h]; 
                app.panMenu.Position = [2 2 0 h];
                
                app.menuShow.Visible = 'on';
                app.menuClose.Visible = 'off';
            else
                h = app.activee.Position(4);
                k = app.tabSign.Position(3);
                w = k - 72 ; 
                app.activee.Position = [72 2 w h]; 
                app.panMenu.Position = [2 2 0 h];
                app.menuShow.Visible = 'on';
                app.menuClose.Visible = 'off';
            end            
        end

        % Callback function
        function menuShowButtonPushed(app, event)
            if strcmp(app.activee,'')
                app.activee = app.panAccueilS ;
                h = app.activee.Position(4);
                app.panMenu.Visible = 'on';
                app.panMenu.Position = [2 2 330 h];
                
                app.menuShow.Visible = 'off';
                app.menuClose.Visible = 'on';
                app.activee.Position = [333 2 1065 h]; 
            else
                h = app.activee.Position(4);
                app.panMenu.Visible = 'on';
                app.panMenu.Position = [2 2 330 h];
                
                app.menuShow.Visible = 'off';
                app.menuClose.Visible = 'on';
                app.activee.Position = [333 2 1065 h]; 
            end     
        end

        % Callback function
        function ordreDecoButtonPushed(app, event)
            cl = app.decoCol.Value;
            ln = app.decoLign.Value;
            app.singuliere.Visible ='off';
            app.norme.Visible = 'off';
            %        if ln == cl
            
            app.actualiser(app.singuliere);
            app.actualiser(app.norme);
            app.actualiser(app.decoSource);
            app.actualiser(app.resCh);
            app.ValQ.Visible ='off';
            app.ValR.Visible ='off';
            app.deco = app.new_mat(app.decoSource,[0.23 0.34 0.47],[0.95 0.998 0.98],ln,cl);            
            
        end

        % Button pushed function: principal_Aide
        function principal_AideButtonPushed(app, event)
            
            aideLogiciel = 'Vous avez une option pour aller dans la partie de traitement de signal en cliquant le bouton [ Aller au Signal ] ou sur le bouton [ Aller au Mathématique ] pour aller dans la partie Mathématique\n\n Cliquer sur Quitter pour fermer l''application';
            helpdlg(aideLogiciel,'Utilisation de l''application');
        end

        % Callback function: Button_2, apropos, aproposMath, 
        % principal_Apropos
        function principal_AproposButtonPushed(app, event)
            l7 = '--------------------------------------------------------------------------';
            l1 = ' ------------    Utilitaire pour image en M1    -------------';
            l2 = '   ______________________________________________';
            l3 = '             Créateur :  Monome 10  Genie Informatique       ';
            l4 = '             Date de créatiion : février 2021';
            l5 = '             Version  : 1.0.3';
            l6 = '             ________________';
            aide = sprintf('\n\t %s\n\t %s\n\t%s\n\n\t%s \n\t%s\n\n\t%s\n\t%s',l7,l1,l2,l3, l4,l5,l6);
            helpdlg(aide,'A propos du logiciel ');
        end

        % Button pushed function: quitPrincipalBtn
        function quitPrincipalBtnButtonPushed(app, event)
            close(app.fen);
        end

        % Callback function
        function rectangleSignalPushed(app, event)
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.rectangleSignal,app.allbouton,6);
            app.activee = app.panelActiver(app.panConvolution,app.allpanel,7);
        end

        % Button pushed function: retournAccueilMath
        function retournAccueilMathButtonPushed(app, event)
            app.accueil.Visible = 'on';
            app.tableauM.Visible = 'off';
        end

        % Button pushed function: signBoutonValider
        function signBoutonValiderButtonPushed(app, event)
            t = -1 : 0.001 : 1 ;
            y = lower(app.fonctionSign.Value);
            g = eval(y); 
            f = sign(g);
            title(app.axeSign,strcat('Sign de signal : ',y));            
            plot(app.axeSign,t,f,'c');
        end

        % Value changed function: signOption
        function signOptionValueChanged(app, event)
            value = app.signOption.Value;
            t = -1 : 0.001 : 1 ;
            switch value
                case 'sin(t)'
                    app.fonctionSign.Value = 'sin(t)';
                    y = lower(app.fonctionSign.Value);        
                    g = eval(y); 
                    f = sign(g);
                    title(app.axeSign,strcat('Sign de signal : ',y));          
                    plot(app.axeSign,t,f,'c');
                case 'tan(t)'
                    app.fonctionSign.Value = 'tan(t)';
                    y = lower(app.fonctionSign.Value);        
                    g = eval(y);   
                    f = sign(g);
                    title(app.axeSign,strcat('Sign de signal : ',y));            
                    plot(app.axeSign,t,f,'c');
                case 'sinc(t)'
                    app.fonctionSign.Value = 'sinc(t)';
                    y = lower(app.fonctionSign.Value);        
                    g = eval(y); 
                    f = sign(g);
                    title(app.axeSign,strcat('Sign de signal : ',y)); 
                    plot(app.axeSign,t,f,'c');
                
            end
        end

        % Button pushed function: signRetourneAccueil
        function signRetourneAccueilButtonPushed(app, event)
            app.accueil.Visible = 'on';
            app.tableauM.Visible = 'off';
        end

        % Callback function
        function tansBtnButtonPushed(app, event)
            if ( app.detSource.Children ~= 0 )
                [l,c] = size(app.transpos);
                app.actualiser(app.transposee);
                res = transpose(app.getMatrice(app.transpos,l,c));                
                [ln,cl] = size(res);
                fprintf(' ==================  La matrice A  ======== \n\n');
                disp(app.getMatrice(app.transpos,l,c));
                fprintf(' ==================  transposition du matrice A  ======== \n\n');
                disp(res);
                
                [tmp,a,b,x,y,w,h] = app.positions(app.transposee,ln,cl);                
                for i = 1:ln
                    for j = 1:cl
                        transp(i,j) = uieditfield(app.transposee,'numeric','HorizontalAlignment','center');
                        transp(i,j).Position = [ x y w h ];
                        transp(i,j).Value = res(i,j);
                        transp(i,j).Editable = 'Off';
                        transp(i,j).Limits = [-1000 1000];
                        transp(i,j).BackgroundColor = [0.24 0.39 0.52];
                        transp(i,j).FontColor = [1 1 0.9];
                        x = x + w + a ;
                    end
                    x = tmp ;
                    y = y - ( h + b );
                end
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end           
        end

        % Button pushed function: tracageEchelon
        function tracageEchelonButtonPushed(app, event)
            app.labTitre.Text = 'Traçage de sign d''un signal';
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.tracageEchelon,app.allbouton,6);
            app.activee = app.panelActiver(app.panSign,app.allpanel,7);
        end

        % Callback function
        function tracagedunsignalrampPushed(app, event)
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.tracagedunsignalramp,app.allbouton,6);
            app.activee = app.panelActiver(app.panRamp,app.allpanel,7);
        end

        % Callback function
        function traceBtnButtonPushed(app, event)
            
            [l,c] = size(app.transpos);
            if (app.detSource.Children ~= 0)
                if (l == c )
                    app.traces.Visible = 'on';
                    app.actualiser(app.traces);                    
                    res = trace(app.getMatrice(app.transpos,l,c));
                    fprintf('============= Trace de la Matrice   =========== ');
                    disp(res);
                    trac = uieditfield(app.traces,'numeric','HorizontalAlignment','center');
                    trac.Position = [ 120 140 115 50 ];
                    trac.Value = res;
                    trac.BackgroundColor = [0.24 0.39 0.52];
                    trac.FontColor = [1 1 0.9];
                    trac.Editable = 'Off';
                else
                    warndlg('Pour calculer la trace, il faut que la dimension de la matrice soit carrée !','Warning dimension');
                end                
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end            
        end

        % Button pushed function: traceConvolution
        function traceConvolutionButtonPushed(app, event)
            app.labTitre.Text = 'Traçage de convolution d''un signal';
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.boutonActiver(app.traceConvolution,app.allbouton,6);
            app.activee = app.panelActiver(app.panConvolution,app.allpanel,7);
        end

        % Button pushed function: traceSignaBruit
        function traceSignaBruitButtonPushed(app, event)
            try
                k = app.periodeB.Value ;
                t0 = app.t0B.Value ;
                t = 0 : 1/k : 10 ;
                signale = lower(app.foncSignalBruit.Value);
                bruit = lower(app.foncBruit.Value);
                a = app.amplitudeB.Value ;
                g = a.*eval(signale) + rand(1,length(t));
                b = eval(bruit) + rand(1,length(t));
                y = b+g + rand(1,length(t));
                plot(app.axeSignalAvecBruit,t,g,'g',t,b,'m');
                plot(app.axeResBruit,t,y,'c');
            catch
                errordlg('Fonction invalide ! \n Veuillez le verifier','Erreur fonction');
            end
            
        end

        % Callback function
        function traceSignalSimpleButtonPushed(app, event)
            
            t = [ app.bornInf.Value : app.pasInterval.Value : app.bornSup.Value ];            
            titres = strcat("Courbe de la fonction : ",lower(app.simpleFonction.Value));
            title(app.axeSimple,titres);
            try
                g = eval(lower(app.simpleFonction.Value));
                plot(app.axeSimple,t,g);
            catch 
                errordlg('Fonction invalide ! \n Veuillez le verifier','Erreur fonction');
            end
        end

        % Button pushed function: tracerConvolution
        function tracerConvolutionButtonPushed(app, event)
            
            T = 1/app.freqConv.Value ;
            t = app.infConv.Value : T : app.supConv.Value ;
            if strcmp(app.foncConv1.Value,'') || strcmp(app.foncConv2.Value,'')
                errordlg('ous devez completer le deux champs !','Erreur [ champs vide ]');
            else
                try
                    s1 = eval(lower(app.foncConv1.Value));
                    s2 = eval(lower(app.foncConv2.Value));
                    f = s1.*s2; 
                    z = conv(s1,s2);
                    plot(app.axeConvolution,z,'c');
                catch
                    errordlg('Fonction invalide ! \n Veuillez le verifier','Erreur fonction');                
                end
            end
        end

        % Button pushed function: tracerDirac
        function tracerDiracButtonPushed(app, event)
            selectedButton = app.diracOptionBouton.SelectedObject;
            
            if  strcmp(app.foncDirac.Value,'')                
                errordlg('Vous devez definir la fonction !','Fonctionvides');            
            else
                k = 1/app.periodeDirac.Value ;
                t = -10 : k : 10 ;
                t0 = app.t0Dirac.Value ;
                a = app.amplitudeDirac.Value ;
                
                switch (selectedButton.Text)  
                    case 'Trace de dirac' 
                    try
                        y = eval(lower(app.foncDirac.Value));
                        f = app.diracs(y,t);
                        stem(app.axeDirac,t,f,'c');
                    catch
                        errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                    end
                    case 'Trace d''un rectangle'
                        try
                            k = k * 1/1000 ;
                            t = -1 : k : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*app.rectangle(y,t);
                            plot(app.axeDirac,t,f,'y');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end
                    case 'Trace d''un triangle'
                        try
                            k = k * 1/1000 ;
                            t = -1 : k : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*tripuls(y)
                            plot(app.axeDirac,t,f,'g');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end 
                    case 'Trace d''échelon'
                        try
                            t = -1 : 0.001 : 1 ;
                            y = eval(lower(app.foncDirac.Value));
                            f = a*heaviside(y)
                            plot(app.axeDirac,t,f,'m');
                        catch
                            errordlg('Votre fonction invalide !, Veuillez la verifier !','Invalide fonction');
                        end
                 end   
            end 
        end

        % Callback function
        function transformationEnFourierSimplePushed(app, event)
            app.labTitre.Text = 'Traçage d''une fonction et son Trasnformé en Fourier';
            app.allbouton = [app.traceFonctionSimple,app.transformerFourier,app.traceConvolution,app.TracagedunBruit,app.Tracagedunsignaldedirac,app.tracageEchelon];            
            app.allpanel = [app.panSimpleFunction,app.transformFourier,app.signalBruit,app.signalDirac,app.panConvolution,app.panAccueilS,app.panSign];
            app.activee = app.panelActiver(app.transformFourier,app.allpanel,7);
            app.boutonActiver(app.transformerFourier,app.allbouton,6);
        end

        % Callback function
        function typeOperationValueChanged(app, event)
            
            value = app.typeOperation.Value;
            switch value
                case 'Choisissez ici votre type d''Operation matricielle'
                    app.vectP.Visible = 'off';
                    app.valP.Visible = 'off';
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'off';
                    app.eqLineaire.Visible ='off';
                    app.invMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'off';
                    app.panAccueilMat.Visible = 'on';
                    
                case 'Calcul vecteur et valeur propre'
                    app.vectP.Visible = 'off';
                    app.valP.Visible = 'off';
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'off';
                    app.eqLineaire.Visible ='off';
                    app.invMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'on';
                    app.panAccueilMat.Visible = 'off';
                    
                case 'Systeme d''équation linéaire'
                    app.panAccueilMat.Visible = 'off';
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'off';
                    app.eqLineaire.Visible ='on';
                    app.invMat.Visible = 'off';
                    
                case 'Decomposition d''une matrice'
                    
                    app.singuliere.Visible ='off';
                    app.norme.Visible = 'off';
                    app.panAccueilMat.Visible = 'off';
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'on';
                    app.vect_val_Mat.Visible = 'off';
                    app.eqLineaire.Visible = 'off';
                    app.invMat.Visible = 'off';
                    
                case 'Caclul inverse d''une matrice'
                    app.panAccueilMat.Visible = 'off';
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'off';
                    app.eqLineaire.Visible = 'off';
                    app.invMat.Visible = 'on';
                    
                case 'Somme et Produit de deux matrice'
                    app.sommProduitmat.Visible='on';
                    app.trace_det_trans.Visible='off';
                    app.decoMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'off';
                    app.eqLineaire.Visible = 'off';
                    app.invMat.Visible = 'off';
                    app.panAccueilMat.Visible = 'off';
                case 'Transposition , determinant et trace d''une matrice'
                    app.sommProduitmat.Visible='off';
                    app.trace_det_trans.Visible='on';
                    app.decoMat.Visible = 'off';
                    app.vect_val_Mat.Visible = 'off';
                    app.eqLineaire.Visible = 'off';
                    app.invMat.Visible = 'off';
                    app.panAccueilMat.Visible = 'off';
            end
        end

        % Callback function
        function validMat1ButtonPushed(app, event)
            l1 =  app.lign_mat1.Value;
            col1 = app.col_mat1.Value;
            
            app.actualiser(app.premierMat);
            app.actualiser(app.resultSom)
            app.actualiser(app.resultProd);
            app.mat1 = app.new_mat(app.premierMat,[0.57 0.6 0.67],[0.98 1 1 ],l1,col1);
            
            
        end

        % Callback function
        function validMat2ButtonPushed(app, event)
            col2 = app.col_mat2.Value;
            l2 =  app.lign_mat2.Value;
            
            app.actualiser(app.secondMat);
            app.actualiser(app.resultSom)
            app.actualiser(app.resultProd);
            app.mat2 = app.new_mat(app.secondMat,[0.45 0.51 0.62],[0.98 1 1 ],l2,col2);
        end

        % Callback function
        function validTransButtonPushed(app, event)
            
            l = app.detLign.Value;
            c = app.detCol.Value;
            
            app.actualiser(app.detSource);
            app.actualiser(app.determinant);
            app.actualiser(app.traces);
            app.actualiser(app.transposee);
            app.determinant.Visible = 'off';
            app.traces.Visible = 'off';
            
            app.transpos = app.new_mat(app.detSource,[0.24 0.39 0.52],[1 1 0.9],l,c);
        end

        % Callback function
        function vectOrdreBtnButtonPushed(app, event)
            cl = app.vectCol.Value;
            ln = app.vectLign.Value;
            app.vectP.Visible ='off';
            app.valP.Visible = 'off';
            if ln == cl
                app.actualiser(app.vectSourceMat);
                app.actualiser(app.vectP);
                app.actualiser(app.valP);
                app.vector = app.new_mat(app.vectSourceMat,[0.1 0.42 0.53 ],[0.9 0.9 1],ln,cl);
            else
                warndlg('Le nombre de ligne et nombre de colonne doivent etres égale','Warning');
            end
        end

        % Callback function
        function vectResultBtnButtonPushed(app, event)
            if (app.vectSourceMat.Children ~= 0 )
                app.vectP.Visible ='on';
                app.valP.Visible = 'on';
                
                app.actualiser(app.vectP);
                app.actualiser(app.valP);
                [ln,cl] = size(app.vector);
                
                vectMat = app.getMatrice(app.vector,ln, cl);
                [vecteurP,valeurP] = eig(vectMat);
                
                fprintf(' \n\n ====================    Vecteur propre      ====================  \n');
                disp(vecteurP);
                fprintf('  \n\n ==================    Valeur propre     ====================== \n ');
                disp(valeurP);
                
                [tmp,a,b,x,y,w,h] = app.positions(app.vectP,ln,cl);
                                
                for i = 1:ln
                    for j = 1:cl
                        vecteure = uieditfield(app.vectP,'numeric','HorizontalAlignment','center');
                        vecteure.Position = [ x y w h ];
                        vecteure.Value = vecteurP(i,j);
                        vecteure.Editable = 'Off';
                        vecteure.Limits = [-1000 1000];
                        vecteure.BackgroundColor = [ 0.1 0.42 0.53];
                        vecteure.FontColor = [0 1 1];
                        x = x + w + a ;
                    end
                    x = tmp ;
                    y = y - ( h + b );
                end
                
                [tmps,aa,bb,xx,yy,ww,hh] = app.positions(app.valP,ln,cl);
                
                for i = 1:ln
                    for j = 1:cl
                        Element = uieditfield(app.valP,'numeric','HorizontalAlignment','center');
                        Element.Position = [xx yy ww hh ];
                        Element.Value = valeurP(i,j);
                        Element.Editable = 'Off';
                        Element.Limits = [-1000 1000];
                        Element.BackgroundColor = [ 0.1 0.42 0.53];
                        Element.FontColor = [0 1 0];
                        xx = xx + ww + aa ;
                    end
                    xx = tmps ;
                    yy = yy - ( hh + bb );
                end
            else
                errordlg(' Vous devez definir la matrice avant de commencer!  Error : [ matrix not found ]','Erreur 404');
            end             
        end
    end

    % App initialization and construction
    methods (Access = private)

        % Create UIFigure and components
        function createComponents(app)

            % Create fen
            app.fen = uifigure;
            app.fen.Color = [0.902 0.902 0.902];
            app.fen.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.fen.Position = [20 50 1400 850];
            app.fen.Name = 'Utilitaire pour image';
            app.fen.Resize = 'off';

            % Create tableauM
            app.tableauM = uitabgroup(app.fen);
            app.tableauM.Visible = 'off';
            app.tableauM.Position = [1 1 1400 850];

            % Create tabMath
            app.tabMath = uitab(app.tableauM);
            app.tabMath.Title = 'PARTIE MATHEMATIQUES';
            app.tabMath.BackgroundColor = [0.2588 0.4118 0.5216];
            app.tabMath.ForegroundColor = [0 0.451 0.7412];

            % Create TypedoperationsMat
            app.TypedoperationsMat = uilabel(app.tabMath);
            app.TypedoperationsMat.HorizontalAlignment = 'center';
            app.TypedoperationsMat.VerticalAlignment = 'center';
            app.TypedoperationsMat.FontSize = 20;
            app.TypedoperationsMat.FontColor = [0 1 1];
            app.TypedoperationsMat.Position = [14 778 184 26];
            app.TypedoperationsMat.Text = 'Type des opérations';

            % Create typeOperation
            app.typeOperation = uidropdown(app.tabMath);
            app.typeOperation.Items = {'Choisissez ici votre type d''Operation matricielle', 'Calcul vecteur et valeur propre', 'Systeme d''équation linéaire', 'Decomposition d''une matrice', 'Caclul inverse d''une matrice', 'Somme et Produit de deux matrice', 'Transposition , determinant et trace d''une matrice'};
            app.typeOperation.ValueChangedFcn = createCallbackFcn(app, @typeOperationValueChanged, true);
            app.typeOperation.FontSize = 18;
            app.typeOperation.FontColor = [1 1 1];
            app.typeOperation.BackgroundColor = [0.251 0.4196 0.5412];
            app.typeOperation.Position = [209 774 429 31];
            app.typeOperation.Value = 'Choisissez ici votre type d''Operation matricielle';

            % Create trace_det_trans
            app.trace_det_trans = uipanel(app.tabMath);
            app.trace_det_trans.ForegroundColor = [0.8706 1 0.8392];
            app.trace_det_trans.BorderType = 'none';
            app.trace_det_trans.TitlePosition = 'centertop';
            app.trace_det_trans.Title = 'Calcul déterminant, trace et le transposé d''une  matrice';
            app.trace_det_trans.Visible = 'off';
            app.trace_det_trans.BackgroundColor = [0.2392 0.3882 0.5216];
            app.trace_det_trans.FontWeight = 'bold';
            app.trace_det_trans.FontSize = 20;
            app.trace_det_trans.Position = [0 0 1400 756];

            % Create resultat_trace_det_tranc
            app.resultat_trace_det_tranc = uipanel(app.trace_det_trans);
            app.resultat_trace_det_tranc.ForegroundColor = [0 1 1];
            app.resultat_trace_det_tranc.BorderType = 'none';
            app.resultat_trace_det_tranc.TitlePosition = 'centertop';
            app.resultat_trace_det_tranc.Title = 'Résultat';
            app.resultat_trace_det_tranc.BackgroundColor = [0.2706 0.4314 0.5882];
            app.resultat_trace_det_tranc.FontSize = 18;
            app.resultat_trace_det_tranc.Position = [681 379 704 340];

            % Create determinant
            app.determinant = uipanel(app.resultat_trace_det_tranc);
            app.determinant.ForegroundColor = [0.902 0.902 0.902];
            app.determinant.TitlePosition = 'centertop';
            app.determinant.Title = 'Déterminant de A';
            app.determinant.Visible = 'off';
            app.determinant.BackgroundColor = [0.2706 0.451 0.6118];
            app.determinant.FontSize = 18;
            app.determinant.Position = [2 2 355 311];

            % Create traces
            app.traces = uipanel(app.resultat_trace_det_tranc);
            app.traces.ForegroundColor = [0.902 0.902 0.902];
            app.traces.TitlePosition = 'centertop';
            app.traces.Title = 'Trace de A';
            app.traces.Visible = 'off';
            app.traces.BackgroundColor = [0.2706 0.451 0.6118];
            app.traces.FontSize = 18;
            app.traces.Position = [356 2 349 311];

            % Create tansBtn
            app.tansBtn = uibutton(app.trace_det_trans, 'push');
            app.tansBtn.ButtonPushedFcn = createCallbackFcn(app, @tansBtnButtonPushed, true);
            app.tansBtn.BackgroundColor = [0.2784 0.549 0.6902];
            app.tansBtn.FontSize = 16;
            app.tansBtn.FontWeight = 'bold';
            app.tansBtn.FontColor = [0.9412 0.9412 0.9412];
            app.tansBtn.Position = [527 269 145 39];
            app.tansBtn.Text = 'Transposé';

            % Create detBtn
            app.detBtn = uibutton(app.trace_det_trans, 'push');
            app.detBtn.ButtonPushedFcn = createCallbackFcn(app, @detBtnButtonPushed, true);
            app.detBtn.BackgroundColor = [0.2784 0.549 0.6902];
            app.detBtn.FontSize = 16;
            app.detBtn.FontWeight = 'bold';
            app.detBtn.FontColor = [0.9412 0.9412 0.9412];
            app.detBtn.Position = [526.5 465 145 42];
            app.detBtn.Text = 'Déterminant';

            % Create transposee
            app.transposee = uipanel(app.trace_det_trans);
            app.transposee.ForegroundColor = [1 1 0];
            app.transposee.BorderType = 'none';
            app.transposee.TitlePosition = 'centertop';
            app.transposee.Title = 'Transposé de A';
            app.transposee.BackgroundColor = [0.2784 0.4392 0.6];
            app.transposee.FontSize = 18;
            app.transposee.Position = [682 13 703 357];

            % Create traceBtn
            app.traceBtn = uibutton(app.trace_det_trans, 'push');
            app.traceBtn.ButtonPushedFcn = createCallbackFcn(app, @traceBtnButtonPushed, true);
            app.traceBtn.BackgroundColor = [0.2784 0.549 0.6902];
            app.traceBtn.FontSize = 16;
            app.traceBtn.FontWeight = 'bold';
            app.traceBtn.FontColor = [0.9412 0.9412 0.9412];
            app.traceBtn.Position = [527 369 145 41];
            app.traceBtn.Text = 'Trace';

            % Create detSource
            app.detSource = uipanel(app.trace_det_trans);
            app.detSource.ForegroundColor = [0.902 0.902 0.902];
            app.detSource.BorderType = 'none';
            app.detSource.TitlePosition = 'centertop';
            app.detSource.Title = 'Matrice A';
            app.detSource.BackgroundColor = [0.2706 0.4314 0.5882];
            app.detSource.FontSize = 20;
            app.detSource.Position = [8 13 510 552];

            % Create determinant_2
            app.determinant_2 = uipanel(app.trace_det_trans);
            app.determinant_2.ForegroundColor = [0.902 0.902 0.902];
            app.determinant_2.TitlePosition = 'centertop';
            app.determinant_2.Title = 'Dimension du matrice';
            app.determinant_2.BackgroundColor = [0.3098 0.4588 0.6118];
            app.determinant_2.FontSize = 18;
            app.determinant_2.Position = [8 582 510 133];

            % Create NombredecolonneLabel_2
            app.NombredecolonneLabel_2 = uilabel(app.determinant_2);
            app.NombredecolonneLabel_2.HorizontalAlignment = 'center';
            app.NombredecolonneLabel_2.VerticalAlignment = 'center';
            app.NombredecolonneLabel_2.FontSize = 18;
            app.NombredecolonneLabel_2.FontColor = [0.9412 0.9412 0.9412];
            app.NombredecolonneLabel_2.Position = [16 19 163 30];
            app.NombredecolonneLabel_2.Text = 'Nombre de colonne';

            % Create detCol
            app.detCol = uispinner(app.determinant_2);
            app.detCol.Limits = [1 1000];
            app.detCol.RoundFractionalValues = 'on';
            app.detCol.ValueDisplayFormat = '%.0f';
            app.detCol.Editable = 'off';
            app.detCol.HorizontalAlignment = 'center';
            app.detCol.FontSize = 20;
            app.detCol.FontColor = [1 1 1];
            app.detCol.BackgroundColor = [0.3098 0.4706 0.6588];
            app.detCol.Position = [188 19 81 30];
            app.detCol.Value = 1;

            % Create NombredeligneLabel
            app.NombredeligneLabel = uilabel(app.determinant_2);
            app.NombredeligneLabel.HorizontalAlignment = 'center';
            app.NombredeligneLabel.VerticalAlignment = 'center';
            app.NombredeligneLabel.FontSize = 18;
            app.NombredeligneLabel.FontColor = [0.9412 0.9412 0.9412];
            app.NombredeligneLabel.Position = [20 68 138 23];
            app.NombredeligneLabel.Text = 'Nombre de ligne ';

            % Create detLign
            app.detLign = uispinner(app.determinant_2);
            app.detLign.Limits = [1 1000];
            app.detLign.RoundFractionalValues = 'on';
            app.detLign.ValueDisplayFormat = '%.0f';
            app.detLign.Editable = 'off';
            app.detLign.HorizontalAlignment = 'center';
            app.detLign.FontSize = 20;
            app.detLign.FontColor = [1 1 1];
            app.detLign.BackgroundColor = [0.3098 0.4706 0.6588];
            app.detLign.Position = [188 65 82 30];
            app.detLign.Value = 1;

            % Create validTrans
            app.validTrans = uibutton(app.determinant_2, 'push');
            app.validTrans.ButtonPushedFcn = createCallbackFcn(app, @validTransButtonPushed, true);
            app.validTrans.BackgroundColor = [0.3098 0.9608 0.9216];
            app.validTrans.FontSize = 18;
            app.validTrans.Position = [300 34 173 42];
            app.validTrans.Text = 'Valider';

            % Create sommProduitmat
            app.sommProduitmat = uipanel(app.tabMath);
            app.sommProduitmat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.sommProduitmat.BorderType = 'none';
            app.sommProduitmat.TitlePosition = 'centertop';
            app.sommProduitmat.Title = 'Calcul somme et produits de deux  matrice';
            app.sommProduitmat.Visible = 'off';
            app.sommProduitmat.BackgroundColor = [0.3098 0.4314 0.5412];
            app.sommProduitmat.FontWeight = 'bold';
            app.sommProduitmat.FontSize = 20;
            app.sommProduitmat.Position = [0 0 1400 756];

            % Create premierMat
            app.premierMat = uipanel(app.sommProduitmat);
            app.premierMat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.premierMat.TitlePosition = 'centertop';
            app.premierMat.Title = 'Première matrice';
            app.premierMat.BackgroundColor = [0.3686 0.451 0.5804];
            app.premierMat.FontSize = 20;
            app.premierMat.Position = [6 341 571 304];

            % Create secondMat
            app.secondMat = uipanel(app.sommProduitmat);
            app.secondMat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.secondMat.TitlePosition = 'centertop';
            app.secondMat.Title = 'Second matrice';
            app.secondMat.BackgroundColor = [0.3686 0.451 0.5804];
            app.secondMat.FontSize = 20;
            app.secondMat.Position = [749 341 642 304];

            % Create btnProduit
            app.btnProduit = uibutton(app.sommProduitmat, 'push');
            app.btnProduit.ButtonPushedFcn = createCallbackFcn(app, @btnProduitButtonPushed, true);
            app.btnProduit.BackgroundColor = [0.4 0.502 0.6196];
            app.btnProduit.FontSize = 16;
            app.btnProduit.FontWeight = 'bold';
            app.btnProduit.FontColor = [1 1 1];
            app.btnProduit.Position = [584 350 156 42];
            app.btnProduit.Text = 'Produits';

            % Create btnSomme
            app.btnSomme = uibutton(app.sommProduitmat, 'push');
            app.btnSomme.ButtonPushedFcn = createCallbackFcn(app, @btnSommeButtonPushed, true);
            app.btnSomme.BackgroundColor = [0.4 0.502 0.6196];
            app.btnSomme.FontSize = 16;
            app.btnSomme.FontWeight = 'bold';
            app.btnSomme.FontColor = [1 1 1];
            app.btnSomme.Position = [584 465 156 42];
            app.btnSomme.Text = 'Somme';

            % Create resultProd
            app.resultProd = uipanel(app.sommProduitmat);
            app.resultProd.ForegroundColor = [0.9412 0.9412 0.9412];
            app.resultProd.TitlePosition = 'centertop';
            app.resultProd.Title = 'Résultat de la produit de ces deux matrice';
            app.resultProd.BackgroundColor = [0.3412 0.4392 0.5686];
            app.resultProd.FontSize = 18;
            app.resultProd.Position = [750 7 641 329];

            % Create resultSom
            app.resultSom = uipanel(app.sommProduitmat);
            app.resultSom.ForegroundColor = [0.9412 0.9412 0.9412];
            app.resultSom.TitlePosition = 'centertop';
            app.resultSom.Title = 'Résultat de la somme de ces deux matrice';
            app.resultSom.BackgroundColor = [0.3412 0.4392 0.5686];
            app.resultSom.FontSize = 20;
            app.resultSom.Position = [6 7 571 329];

            % Create DimensionPremirematricePanel
            app.DimensionPremirematricePanel = uipanel(app.sommProduitmat);
            app.DimensionPremirematricePanel.ForegroundColor = [0 1 1];
            app.DimensionPremirematricePanel.TitlePosition = 'centertop';
            app.DimensionPremirematricePanel.Title = 'Dimension Première matrice';
            app.DimensionPremirematricePanel.BackgroundColor = [0.3412 0.4392 0.5686];
            app.DimensionPremirematricePanel.FontSize = 18;
            app.DimensionPremirematricePanel.Position = [7 650 570 74];

            % Create LigneLabel
            app.LigneLabel = uilabel(app.DimensionPremirematricePanel);
            app.LigneLabel.HorizontalAlignment = 'center';
            app.LigneLabel.VerticalAlignment = 'center';
            app.LigneLabel.FontSize = 18;
            app.LigneLabel.FontColor = [0.9412 0.9412 0.9412];
            app.LigneLabel.Position = [12.5 15 55 23];
            app.LigneLabel.Text = 'Ligne ';

            % Create lign_mat1
            app.lign_mat1 = uispinner(app.DimensionPremirematricePanel);
            app.lign_mat1.Limits = [1 1000];
            app.lign_mat1.RoundFractionalValues = 'on';
            app.lign_mat1.ValueDisplayFormat = '%.0f';
            app.lign_mat1.HorizontalAlignment = 'center';
            app.lign_mat1.FontSize = 18;
            app.lign_mat1.BackgroundColor = [0.8 0.8 0.8];
            app.lign_mat1.Position = [76 10 78 29];
            app.lign_mat1.Value = 1;

            % Create ColonneLabel
            app.ColonneLabel = uilabel(app.DimensionPremirematricePanel);
            app.ColonneLabel.HorizontalAlignment = 'center';
            app.ColonneLabel.VerticalAlignment = 'center';
            app.ColonneLabel.FontSize = 18;
            app.ColonneLabel.FontColor = [0.9412 0.9412 0.9412];
            app.ColonneLabel.Position = [171.5 13 73 23];
            app.ColonneLabel.Text = 'Colonne';

            % Create col_mat1
            app.col_mat1 = uispinner(app.DimensionPremirematricePanel);
            app.col_mat1.Limits = [1 1000];
            app.col_mat1.RoundFractionalValues = 'on';
            app.col_mat1.ValueDisplayFormat = '%.0f';
            app.col_mat1.HorizontalAlignment = 'center';
            app.col_mat1.FontSize = 18;
            app.col_mat1.BackgroundColor = [0.8 0.8 0.8];
            app.col_mat1.Position = [260 11 76 27];
            app.col_mat1.Value = 1;

            % Create validMat1
            app.validMat1 = uibutton(app.DimensionPremirematricePanel, 'push');
            app.validMat1.ButtonPushedFcn = createCallbackFcn(app, @validMat1ButtonPushed, true);
            app.validMat1.BackgroundColor = [0.0196 0.7216 0.7686];
            app.validMat1.FontSize = 18;
            app.validMat1.FontWeight = 'bold';
            app.validMat1.FontColor = [1 1 1];
            app.validMat1.Position = [401 8 143 31];
            app.validMat1.Text = 'Valider';

            % Create DimensionsecondMatricePanel
            app.DimensionsecondMatricePanel = uipanel(app.sommProduitmat);
            app.DimensionsecondMatricePanel.ForegroundColor = [0 1 1];
            app.DimensionsecondMatricePanel.TitlePosition = 'centertop';
            app.DimensionsecondMatricePanel.Title = 'Dimension second Matrice';
            app.DimensionsecondMatricePanel.BackgroundColor = [0.3412 0.4392 0.5686];
            app.DimensionsecondMatricePanel.FontSize = 18;
            app.DimensionsecondMatricePanel.Position = [749 650 642 74];

            % Create LigneLabel_2
            app.LigneLabel_2 = uilabel(app.DimensionsecondMatricePanel);
            app.LigneLabel_2.HorizontalAlignment = 'center';
            app.LigneLabel_2.VerticalAlignment = 'center';
            app.LigneLabel_2.FontSize = 18;
            app.LigneLabel_2.FontColor = [0.9412 0.9412 0.9412];
            app.LigneLabel_2.Position = [31 9 55 29];
            app.LigneLabel_2.Text = 'Ligne ';

            % Create lign_mat2
            app.lign_mat2 = uispinner(app.DimensionsecondMatricePanel);
            app.lign_mat2.Limits = [1 1000];
            app.lign_mat2.RoundFractionalValues = 'on';
            app.lign_mat2.ValueDisplayFormat = '%.0f';
            app.lign_mat2.HorizontalAlignment = 'center';
            app.lign_mat2.FontSize = 18;
            app.lign_mat2.BackgroundColor = [0.8 0.8 0.8];
            app.lign_mat2.Position = [93 9 74 29];
            app.lign_mat2.Value = 1;

            % Create ColonneLabel_2
            app.ColonneLabel_2 = uilabel(app.DimensionsecondMatricePanel);
            app.ColonneLabel_2.HorizontalAlignment = 'center';
            app.ColonneLabel_2.VerticalAlignment = 'center';
            app.ColonneLabel_2.FontSize = 18;
            app.ColonneLabel_2.FontColor = [0.9412 0.9412 0.9412];
            app.ColonneLabel_2.Position = [193 8 73 29];
            app.ColonneLabel_2.Text = 'Colonne';

            % Create col_mat2
            app.col_mat2 = uispinner(app.DimensionsecondMatricePanel);
            app.col_mat2.Limits = [1 1000];
            app.col_mat2.RoundFractionalValues = 'on';
            app.col_mat2.ValueDisplayFormat = '%.0f';
            app.col_mat2.HorizontalAlignment = 'center';
            app.col_mat2.FontSize = 18;
            app.col_mat2.BackgroundColor = [0.8 0.8 0.8];
            app.col_mat2.Position = [284 8 73 30];
            app.col_mat2.Value = 1;

            % Create validMat2
            app.validMat2 = uibutton(app.DimensionsecondMatricePanel, 'push');
            app.validMat2.ButtonPushedFcn = createCallbackFcn(app, @validMat2ButtonPushed, true);
            app.validMat2.BackgroundColor = [0.0196 0.7216 0.7686];
            app.validMat2.FontSize = 18;
            app.validMat2.FontWeight = 'bold';
            app.validMat2.FontColor = [1 1 1];
            app.validMat2.Position = [435 8 162 31];
            app.validMat2.Text = 'Valider';

            % Create decoMat
            app.decoMat = uipanel(app.tabMath);
            app.decoMat.ForegroundColor = [0 1 1];
            app.decoMat.BorderType = 'none';
            app.decoMat.TitlePosition = 'centertop';
            app.decoMat.Title = 'Décomposition d''une matrice';
            app.decoMat.Visible = 'off';
            app.decoMat.BackgroundColor = [0.0706 0.4784 0.5686];
            app.decoMat.FontWeight = 'bold';
            app.decoMat.FontSize = 20;
            app.decoMat.Position = [0 0 1400 756];

            % Create decoSource
            app.decoSource = uipanel(app.decoMat);
            app.decoSource.ForegroundColor = [1 1 1];
            app.decoSource.TitlePosition = 'centertop';
            app.decoSource.Title = 'Matrice ';
            app.decoSource.BackgroundColor = [0.1686 0.4588 0.549];
            app.decoSource.FontSize = 18;
            app.decoSource.Position = [9 372 520 294];

            % Create NombredeligneSpinner_4Label_4
            app.NombredeligneSpinner_4Label_4 = uilabel(app.decoMat);
            app.NombredeligneSpinner_4Label_4.BackgroundColor = [0.1294 0.4902 0.6118];
            app.NombredeligneSpinner_4Label_4.HorizontalAlignment = 'center';
            app.NombredeligneSpinner_4Label_4.VerticalAlignment = 'center';
            app.NombredeligneSpinner_4Label_4.FontSize = 18;
            app.NombredeligneSpinner_4Label_4.FontColor = [0.9412 0.9412 0.9412];
            app.NombredeligneSpinner_4Label_4.Position = [13 682 148 30];
            app.NombredeligneSpinner_4Label_4.Text = 'Nombre de  ligne ';

            % Create decoLign
            app.decoLign = uispinner(app.decoMat);
            app.decoLign.Limits = [1 1000];
            app.decoLign.ValueDisplayFormat = '%.0f';
            app.decoLign.HorizontalAlignment = 'center';
            app.decoLign.FontSize = 18;
            app.decoLign.FontColor = [0.9412 0.9412 0.9412];
            app.decoLign.BackgroundColor = [0.1294 0.4902 0.6118];
            app.decoLign.Position = [163 683 67 27];
            app.decoLign.Value = 1;

            % Create NombredecolonneSpinner_4Label_4
            app.NombredecolonneSpinner_4Label_4 = uilabel(app.decoMat);
            app.NombredecolonneSpinner_4Label_4.BackgroundColor = [0.1294 0.4902 0.6118];
            app.NombredecolonneSpinner_4Label_4.HorizontalAlignment = 'center';
            app.NombredecolonneSpinner_4Label_4.VerticalAlignment = 'center';
            app.NombredecolonneSpinner_4Label_4.FontSize = 18;
            app.NombredecolonneSpinner_4Label_4.FontColor = [0.9412 0.9412 0.9412];
            app.NombredecolonneSpinner_4Label_4.Position = [244 682 168 30];
            app.NombredecolonneSpinner_4Label_4.Text = 'Nombre de  colonne';

            % Create decoCol
            app.decoCol = uispinner(app.decoMat);
            app.decoCol.Limits = [1 1000];
            app.decoCol.ValueDisplayFormat = '%.0f';
            app.decoCol.HorizontalAlignment = 'center';
            app.decoCol.FontSize = 18;
            app.decoCol.FontColor = [0.9412 0.9412 0.9412];
            app.decoCol.BackgroundColor = [0.1294 0.4902 0.6118];
            app.decoCol.Position = [418 683 70 27];
            app.decoCol.Value = 1;

            % Create ordreDeco
            app.ordreDeco = uibutton(app.decoMat, 'push');
            app.ordreDeco.ButtonPushedFcn = createCallbackFcn(app, @ordreDecoButtonPushed, true);
            app.ordreDeco.BackgroundColor = [0.2118 0.6706 0.6];
            app.ordreDeco.FontSize = 16;
            app.ordreDeco.FontWeight = 'bold';
            app.ordreDeco.FontColor = [1 1 1];
            app.ordreDeco.Position = [532 677 178 37];
            app.ordreDeco.Text = 'Valider';

            % Create decoSvd
            app.decoSvd = uibutton(app.decoMat, 'push');
            app.decoSvd.ButtonPushedFcn = createCallbackFcn(app, @decoSvdButtonPushed, true);
            app.decoSvd.BackgroundColor = [0.0784 0.4706 0.6196];
            app.decoSvd.FontSize = 16;
            app.decoSvd.FontColor = [0.9412 0.9412 0.9412];
            app.decoSvd.Position = [539.5 533 166 44];
            app.decoSvd.Text = 'Singulière du matrice';

            % Create decoNorm
            app.decoNorm = uibutton(app.decoMat, 'push');
            app.decoNorm.ButtonPushedFcn = createCallbackFcn(app, @decoNormButtonPushed, true);
            app.decoNorm.IconAlignment = 'center';
            app.decoNorm.BackgroundColor = [0.0784 0.4706 0.6196];
            app.decoNorm.FontSize = 16;
            app.decoNorm.FontColor = [0.9412 0.9412 0.9412];
            app.decoNorm.Position = [540 594 166 40];
            app.decoNorm.Text = 'Norme du matrice';

            % Create decoResult
            app.decoResult = uipanel(app.decoMat);
            app.decoResult.ForegroundColor = [0.9412 0.9412 0.9412];
            app.decoResult.BorderType = 'none';
            app.decoResult.TitlePosition = 'centertop';
            app.decoResult.Title = 'Résultat';
            app.decoResult.BackgroundColor = [0.0588 0.4314 0.5294];
            app.decoResult.FontSize = 18;
            app.decoResult.Position = [721 369 669 338];

            % Create norme
            app.norme = uipanel(app.decoResult);
            app.norme.ForegroundColor = [1 0.8 0];
            app.norme.TitlePosition = 'centertop';
            app.norme.Title = 'Norme de la matrice';
            app.norme.Visible = 'off';
            app.norme.BackgroundColor = [0.1686 0.4588 0.549];
            app.norme.FontSize = 18;
            app.norme.Position = [1 1.00000000000011 264 310];

            % Create singuliere
            app.singuliere = uipanel(app.decoResult);
            app.singuliere.ForegroundColor = [1 1 0.8];
            app.singuliere.TitlePosition = 'centertop';
            app.singuliere.Title = 'Valeur singulière de la matrice';
            app.singuliere.Visible = 'off';
            app.singuliere.BackgroundColor = [0.1686 0.4588 0.549];
            app.singuliere.FontSize = 18;
            app.singuliere.Position = [264 1.00000000000011 406 310];

            % Create btnCh
            app.btnCh = uibutton(app.decoMat, 'push');
            app.btnCh.ButtonPushedFcn = createCallbackFcn(app, @btnChButtonPushed, true);
            app.btnCh.BackgroundColor = [0.0784 0.4706 0.6196];
            app.btnCh.FontSize = 16;
            app.btnCh.FontColor = [0.9412 0.9412 0.9412];
            app.btnCh.Position = [539.5 422 166 42];
            app.btnCh.Text = 'Résultat Cholesky';

            % Create btnQR
            app.btnQR = uibutton(app.decoMat, 'push');
            app.btnQR.ButtonPushedFcn = createCallbackFcn(app, @btnQRButtonPushed, true);
            app.btnQR.IconAlignment = 'center';
            app.btnQR.BackgroundColor = [0.0784 0.4706 0.6196];
            app.btnQR.FontSize = 16;
            app.btnQR.FontColor = [0.9412 0.9412 0.9412];
            app.btnQR.Position = [540 480 166 40];
            app.btnQR.Text = 'Résultat QR';

            % Create resCh
            app.resCh = uipanel(app.decoMat);
            app.resCh.ForegroundColor = [1 0.9216 1];
            app.resCh.BorderType = 'none';
            app.resCh.TitlePosition = 'centertop';
            app.resCh.Title = 'Résultat décomposition Cholesky';
            app.resCh.BackgroundColor = [0.0588 0.4314 0.5294];
            app.resCh.FontSize = 18;
            app.resCh.Position = [9 13 520 348];

            % Create resQR
            app.resQR = uipanel(app.decoMat);
            app.resQR.ForegroundColor = [0.902 0.902 0.902];
            app.resQR.BorderType = 'none';
            app.resQR.TitlePosition = 'centertop';
            app.resQR.Title = 'Résultat décomposition QR';
            app.resQR.BackgroundColor = [0.051 0.4314 0.5294];
            app.resQR.FontSize = 18;
            app.resQR.Position = [545.09375 13 845.015625 348];

            % Create ValQ
            app.ValQ = uipanel(app.resQR);
            app.ValQ.ForegroundColor = [0 1 0];
            app.ValQ.BorderType = 'none';
            app.ValQ.TitlePosition = 'centertop';
            app.ValQ.Title = 'Valeur de Q';
            app.ValQ.Visible = 'off';
            app.ValQ.BackgroundColor = [0.1608 0.4588 0.5804];
            app.ValQ.FontSize = 18;
            app.ValQ.Position = [0 1 409 320];

            % Create ValR
            app.ValR = uipanel(app.resQR);
            app.ValR.ForegroundColor = [0 1 1];
            app.ValR.BorderType = 'none';
            app.ValR.TitlePosition = 'centertop';
            app.ValR.Title = 'Valeur de R';
            app.ValR.Visible = 'off';
            app.ValR.BackgroundColor = [0.1608 0.4588 0.5804];
            app.ValR.FontSize = 18;
            app.ValR.Position = [410 1 435 320];

            % Create eqLineaire
            app.eqLineaire = uipanel(app.tabMath);
            app.eqLineaire.ForegroundColor = [1 1 0];
            app.eqLineaire.BorderType = 'none';
            app.eqLineaire.TitlePosition = 'centertop';
            app.eqLineaire.Title = 'Equation linéaire d''une matrice';
            app.eqLineaire.Visible = 'off';
            app.eqLineaire.BackgroundColor = [0.2314 0.3412 0.4706];
            app.eqLineaire.FontWeight = 'bold';
            app.eqLineaire.FontSize = 20;
            app.eqLineaire.Position = [0 0 1400 756];

            % Create eqSourceMat
            app.eqSourceMat = uipanel(app.eqLineaire);
            app.eqSourceMat.ForegroundColor = [0.902 0.902 0.902];
            app.eqSourceMat.BorderType = 'none';
            app.eqSourceMat.TitlePosition = 'centertop';
            app.eqSourceMat.Title = 'Système d''une équation sous forme matricielle';
            app.eqSourceMat.BackgroundColor = [0.2588 0.3804 0.4902];
            app.eqSourceMat.FontSize = 20;
            app.eqSourceMat.Position = [7 14 539 562];

            % Create eqSecond
            app.eqSecond = uipanel(app.eqLineaire);
            app.eqSecond.ForegroundColor = [0.9412 0.9412 0.9412];
            app.eqSecond.BorderType = 'none';
            app.eqSecond.TitlePosition = 'centertop';
            app.eqSecond.Title = 'Second membre';
            app.eqSecond.BackgroundColor = [0.2588 0.3804 0.4902];
            app.eqSecond.FontSize = 20;
            app.eqSecond.Position = [549 14 181 562];

            % Create eqResultBtn
            app.eqResultBtn = uibutton(app.eqLineaire, 'push');
            app.eqResultBtn.ButtonPushedFcn = createCallbackFcn(app, @eqResultBtnButtonPushed, true);
            app.eqResultBtn.BackgroundColor = [0.102 0.8196 0.7882];
            app.eqResultBtn.FontSize = 20;
            app.eqResultBtn.FontColor = [1 1 1];
            app.eqResultBtn.Position = [1142.5 607 249 37];
            app.eqResultBtn.Text = 'Voir le résultat';

            % Create eqOrdreBtn
            app.eqOrdreBtn = uibutton(app.eqLineaire, 'push');
            app.eqOrdreBtn.ButtonPushedFcn = createCallbackFcn(app, @eqOrdreBtnButtonPushed, true);
            app.eqOrdreBtn.BackgroundColor = [0.0588 0.4 0.5686];
            app.eqOrdreBtn.FontName = 'Georgia';
            app.eqOrdreBtn.FontSize = 20;
            app.eqOrdreBtn.FontWeight = 'bold';
            app.eqOrdreBtn.FontColor = [1 1 1];
            app.eqOrdreBtn.Position = [1143 666 249 37];
            app.eqOrdreBtn.Text = 'Valider';

            % Create eqResultat
            app.eqResultat = uipanel(app.eqLineaire);
            app.eqResultat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.eqResultat.BorderType = 'none';
            app.eqResultat.TitlePosition = 'centertop';
            app.eqResultat.Title = 'Resultat';
            app.eqResultat.BackgroundColor = [0.2588 0.3804 0.4902];
            app.eqResultat.FontSize = 20;
            app.eqResultat.Position = [748 14 644 562];

            % Create eqResultVariable
            app.eqResultVariable = uipanel(app.eqResultat);
            app.eqResultVariable.ForegroundColor = [1 0.949 0.902];
            app.eqResultVariable.BorderType = 'none';
            app.eqResultVariable.TitlePosition = 'centertop';
            app.eqResultVariable.Title = 'Variable';
            app.eqResultVariable.Visible = 'off';
            app.eqResultVariable.BackgroundColor = [0.2392 0.3686 0.502];
            app.eqResultVariable.FontSize = 20;
            app.eqResultVariable.Position = [1 1 303 532];

            % Create eqResultValeur
            app.eqResultValeur = uipanel(app.eqResultat);
            app.eqResultValeur.ForegroundColor = [0 1 1];
            app.eqResultValeur.BorderType = 'none';
            app.eqResultValeur.TitlePosition = 'centertop';
            app.eqResultValeur.Title = 'Valeur';
            app.eqResultValeur.Visible = 'off';
            app.eqResultValeur.BackgroundColor = [0.2392 0.3686 0.502];
            app.eqResultValeur.FontSize = 20;
            app.eqResultValeur.Position = [303 1 341 532];

            % Create eqNomVar
            app.eqNomVar = uipanel(app.eqLineaire);
            app.eqNomVar.ForegroundColor = [0.902 0.902 0.902];
            app.eqNomVar.BorderType = 'none';
            app.eqNomVar.TitlePosition = 'centertop';
            app.eqNomVar.Title = 'Nom des variables';
            app.eqNomVar.BackgroundColor = [0.2392 0.3686 0.502];
            app.eqNomVar.FontSize = 18;
            app.eqNomVar.Position = [7 605 720 104];

            % Create vectSourceMat_3
            app.vectSourceMat_3 = uipanel(app.eqLineaire);
            app.vectSourceMat_3.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectSourceMat_3.TitlePosition = 'centertop';
            app.vectSourceMat_3.BackgroundColor = [0.2392 0.3686 0.502];
            app.vectSourceMat_3.FontSize = 20;
            app.vectSourceMat_3.Position = [749 604 352 104];

            % Create NombredesquationsLabel
            app.NombredesquationsLabel = uilabel(app.vectSourceMat_3);
            app.NombredesquationsLabel.HorizontalAlignment = 'center';
            app.NombredesquationsLabel.VerticalAlignment = 'center';
            app.NombredesquationsLabel.FontSize = 16;
            app.NombredesquationsLabel.FontColor = [0.9412 0.9412 0.9412];
            app.NombredesquationsLabel.Position = [11 18 179 25];
            app.NombredesquationsLabel.Text = 'Nombre des équations ';

            % Create eqLign
            app.eqLign = uispinner(app.vectSourceMat_3);
            app.eqLign.Limits = [1 1000];
            app.eqLign.ValueDisplayFormat = '%.0f';
            app.eqLign.HorizontalAlignment = 'center';
            app.eqLign.FontSize = 20;
            app.eqLign.FontColor = [0.9412 0.9412 0.9412];
            app.eqLign.BackgroundColor = [0.2392 0.3686 0.502];
            app.eqLign.Position = [199 15 105 30];
            app.eqLign.Value = 1;

            % Create NombredesinconnuesLabel
            app.NombredesinconnuesLabel = uilabel(app.vectSourceMat_3);
            app.NombredesinconnuesLabel.HorizontalAlignment = 'center';
            app.NombredesinconnuesLabel.VerticalAlignment = 'center';
            app.NombredesinconnuesLabel.FontSize = 16;
            app.NombredesinconnuesLabel.FontColor = [0.902 0.902 0.902];
            app.NombredesinconnuesLabel.Position = [7 57 182 31];
            app.NombredesinconnuesLabel.Text = 'Nombre des inconnues';

            % Create eqCol
            app.eqCol = uispinner(app.vectSourceMat_3);
            app.eqCol.Limits = [1 1000];
            app.eqCol.ValueDisplayFormat = '%.0f';
            app.eqCol.HorizontalAlignment = 'center';
            app.eqCol.FontSize = 20;
            app.eqCol.FontColor = [0.9412 0.9412 0.9412];
            app.eqCol.BackgroundColor = [0.2392 0.3686 0.502];
            app.eqCol.Position = [198 58 105 30];
            app.eqCol.Value = 1;

            % Create vect_val_Mat
            app.vect_val_Mat = uipanel(app.tabMath);
            app.vect_val_Mat.ForegroundColor = [1 0.9412 0.949];
            app.vect_val_Mat.BorderType = 'none';
            app.vect_val_Mat.TitlePosition = 'centertop';
            app.vect_val_Mat.Title = 'Calcul vecteur propre et valeur propre d''une matrice';
            app.vect_val_Mat.Visible = 'off';
            app.vect_val_Mat.BackgroundColor = [0.102 0.4196 0.5294];
            app.vect_val_Mat.FontWeight = 'bold';
            app.vect_val_Mat.FontSize = 20;
            app.vect_val_Mat.Position = [0 0 1400 756];

            % Create vectSourceMat
            app.vectSourceMat = uipanel(app.vect_val_Mat);
            app.vectSourceMat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectSourceMat.BorderType = 'none';
            app.vectSourceMat.TitlePosition = 'centertop';
            app.vectSourceMat.Title = 'Matrice carré ';
            app.vectSourceMat.BackgroundColor = [0.1804 0.451 0.5804];
            app.vectSourceMat.FontSize = 20;
            app.vectSourceMat.Position = [19 24 574 541];

            % Create vectResultat
            app.vectResultat = uipanel(app.vect_val_Mat);
            app.vectResultat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectResultat.BorderType = 'none';
            app.vectResultat.TitlePosition = 'centertop';
            app.vectResultat.Title = 'Résultat';
            app.vectResultat.BackgroundColor = [0.1882 0.4588 0.6];
            app.vectResultat.FontSize = 20;
            app.vectResultat.Position = [629 24 746 541];

            % Create vectP
            app.vectP = uipanel(app.vectResultat);
            app.vectP.ForegroundColor = [0 1 1];
            app.vectP.TitlePosition = 'centertop';
            app.vectP.Title = 'Vecteur propre';
            app.vectP.BackgroundColor = [0.2588 0.502 0.6392];
            app.vectP.FontSize = 18;
            app.vectP.Position = [2 1 372 510];

            % Create valP
            app.valP = uipanel(app.vectResultat);
            app.valP.ForegroundColor = [0 1 0];
            app.valP.TitlePosition = 'centertop';
            app.valP.Title = 'Valeur propre';
            app.valP.BackgroundColor = [0.2588 0.502 0.6392];
            app.valP.FontSize = 18;
            app.valP.Position = [375 1 371 510];

            % Create vectResultBtn
            app.vectResultBtn = uibutton(app.vect_val_Mat, 'push');
            app.vectResultBtn.ButtonPushedFcn = createCallbackFcn(app, @vectResultBtnButtonPushed, true);
            app.vectResultBtn.BackgroundColor = [0.2784 1 0.8784];
            app.vectResultBtn.FontSize = 18;
            app.vectResultBtn.FontWeight = 'bold';
            app.vectResultBtn.FontColor = [0.5294 0.2196 0.4902];
            app.vectResultBtn.Position = [677.5 586 324 41];
            app.vectResultBtn.Text = 'Resultat';

            % Create vectOrdreBtn
            app.vectOrdreBtn = uibutton(app.vect_val_Mat, 'push');
            app.vectOrdreBtn.ButtonPushedFcn = createCallbackFcn(app, @vectOrdreBtnButtonPushed, true);
            app.vectOrdreBtn.BackgroundColor = [0.1294 0.4196 0.5608];
            app.vectOrdreBtn.FontSize = 18;
            app.vectOrdreBtn.FontWeight = 'bold';
            app.vectOrdreBtn.FontColor = [1 1 1];
            app.vectOrdreBtn.Position = [678 650 324 39];
            app.vectOrdreBtn.Text = 'Valider';

            % Create dimVectP
            app.dimVectP = uipanel(app.vect_val_Mat);
            app.dimVectP.ForegroundColor = [0.9412 0.9412 0.9412];
            app.dimVectP.BorderType = 'none';
            app.dimVectP.TitlePosition = 'centertop';
            app.dimVectP.Title = 'Dimension de la Matrice';
            app.dimVectP.BackgroundColor = [0.1608 0.451 0.5804];
            app.dimVectP.FontSize = 18;
            app.dimVectP.Position = [19 585 574 130];

            % Create NombredecolonneSpinner_4Label_5
            app.NombredecolonneSpinner_4Label_5 = uilabel(app.dimVectP);
            app.NombredecolonneSpinner_4Label_5.HorizontalAlignment = 'center';
            app.NombredecolonneSpinner_4Label_5.VerticalAlignment = 'center';
            app.NombredecolonneSpinner_4Label_5.FontSize = 16;
            app.NombredecolonneSpinner_4Label_5.FontColor = [0.9412 0.9412 0.9412];
            app.NombredecolonneSpinner_4Label_5.Position = [89.5 16 149 28];
            app.NombredecolonneSpinner_4Label_5.Text = 'Nombre de  colonne';

            % Create vectCol
            app.vectCol = uispinner(app.dimVectP);
            app.vectCol.Limits = [1 1000];
            app.vectCol.ValueDisplayFormat = '%.0f';
            app.vectCol.HorizontalAlignment = 'center';
            app.vectCol.FontSize = 16;
            app.vectCol.FontWeight = 'bold';
            app.vectCol.FontColor = [0.9412 0.9412 0.9412];
            app.vectCol.BackgroundColor = [0.1686 0.4392 0.5804];
            app.vectCol.Position = [257 15 120 31];
            app.vectCol.Value = 1;

            % Create NombredeligneSpinner_4Label_5
            app.NombredeligneSpinner_4Label_5 = uilabel(app.dimVectP);
            app.NombredeligneSpinner_4Label_5.HorizontalAlignment = 'center';
            app.NombredeligneSpinner_4Label_5.VerticalAlignment = 'center';
            app.NombredeligneSpinner_4Label_5.FontSize = 16;
            app.NombredeligneSpinner_4Label_5.FontColor = [0.9412 0.9412 0.9412];
            app.NombredeligneSpinner_4Label_5.Position = [87 62 139 30];
            app.NombredeligneSpinner_4Label_5.Text = 'Nombre de  ligne ';

            % Create vectLign
            app.vectLign = uispinner(app.dimVectP);
            app.vectLign.Limits = [1 1000];
            app.vectLign.ValueDisplayFormat = '%.0f';
            app.vectLign.HorizontalAlignment = 'center';
            app.vectLign.FontSize = 16;
            app.vectLign.FontWeight = 'bold';
            app.vectLign.FontColor = [0.9412 0.9412 0.9412];
            app.vectLign.BackgroundColor = [0.1686 0.4392 0.5804];
            app.vectLign.Position = [257 60 120 31];
            app.vectLign.Value = 1;

            % Create invMat
            app.invMat = uipanel(app.tabMath);
            app.invMat.ForegroundColor = [0 1 1];
            app.invMat.BorderType = 'none';
            app.invMat.TitlePosition = 'centertop';
            app.invMat.Title = 'Calcul inverse d''une matrice';
            app.invMat.Visible = 'off';
            app.invMat.BackgroundColor = [0.2 0.4196 0.5216];
            app.invMat.FontWeight = 'bold';
            app.invMat.FontSize = 20;
            app.invMat.Position = [0 0 1400 756];

            % Create invSourceMat
            app.invSourceMat = uipanel(app.invMat);
            app.invSourceMat.ForegroundColor = [0.9412 0.9412 0.9412];
            app.invSourceMat.BorderType = 'none';
            app.invSourceMat.TitlePosition = 'centertop';
            app.invSourceMat.Title = 'Matrice carré ';
            app.invSourceMat.BackgroundColor = [0.2588 0.451 0.5412];
            app.invSourceMat.FontWeight = 'bold';
            app.invSourceMat.FontSize = 20;
            app.invSourceMat.Position = [18 24 648 557];

            % Create invResultMat
            app.invResultMat = uipanel(app.invMat);
            app.invResultMat.ForegroundColor = [0 1 1];
            app.invResultMat.BorderType = 'none';
            app.invResultMat.TitlePosition = 'centertop';
            app.invResultMat.Title = 'Inverse du matrice';
            app.invResultMat.BackgroundColor = [0.3098 0.4784 0.5686];
            app.invResultMat.FontName = 'Monospaced';
            app.invResultMat.FontWeight = 'bold';
            app.invResultMat.FontSize = 20;
            app.invResultMat.Position = [739 24 640 557];

            % Create invResultBtn
            app.invResultBtn = uibutton(app.invMat, 'push');
            app.invResultBtn.ButtonPushedFcn = createCallbackFcn(app, @invResultBtnButtonPushed, true);
            app.invResultBtn.BackgroundColor = [0.4392 0.902 0.7686];
            app.invResultBtn.FontSize = 18;
            app.invResultBtn.FontWeight = 'bold';
            app.invResultBtn.FontColor = [0.2 0.4314 0.5804];
            app.invResultBtn.Position = [739 597 200 40];
            app.invResultBtn.Text = 'Inverser';

            % Create ValiderButton
            app.ValiderButton = uibutton(app.invMat, 'push');
            app.ValiderButton.ButtonPushedFcn = createCallbackFcn(app, @ValiderButtonPushed, true);
            app.ValiderButton.BackgroundColor = [0.149 0.3804 0.5294];
            app.ValiderButton.FontSize = 18;
            app.ValiderButton.FontWeight = 'bold';
            app.ValiderButton.FontColor = [0.7216 1 0.8706];
            app.ValiderButton.Position = [742 658 197 42];
            app.ValiderButton.Text = 'Valider';

            % Create DimensiondelaMatricePanel
            app.DimensiondelaMatricePanel = uipanel(app.invMat);
            app.DimensiondelaMatricePanel.ForegroundColor = [0.5412 1 1];
            app.DimensiondelaMatricePanel.BorderType = 'none';
            app.DimensiondelaMatricePanel.TitlePosition = 'centertop';
            app.DimensiondelaMatricePanel.Title = 'Dimension de la Matrice';
            app.DimensiondelaMatricePanel.BackgroundColor = [0.1216 0.3804 0.4902];
            app.DimensiondelaMatricePanel.FontSize = 18;
            app.DimensiondelaMatricePanel.Position = [18 594 647 115];

            % Create NombredeligneSpinnerLabel
            app.NombredeligneSpinnerLabel = uilabel(app.DimensiondelaMatricePanel);
            app.NombredeligneSpinnerLabel.HorizontalAlignment = 'center';
            app.NombredeligneSpinnerLabel.VerticalAlignment = 'center';
            app.NombredeligneSpinnerLabel.FontSize = 16;
            app.NombredeligneSpinnerLabel.FontColor = [0.9412 0.9412 0.9412];
            app.NombredeligneSpinnerLabel.Position = [46 25 142 30];
            app.NombredeligneSpinnerLabel.Text = 'Nombre de  ligne ';

            % Create invLign
            app.invLign = uispinner(app.DimensiondelaMatricePanel);
            app.invLign.Limits = [1 1000];
            app.invLign.RoundFractionalValues = 'on';
            app.invLign.ValueDisplayFormat = '%.0f';
            app.invLign.HorizontalAlignment = 'center';
            app.invLign.FontSize = 16;
            app.invLign.FontColor = [1 1 0];
            app.invLign.BackgroundColor = [0.1216 0.3804 0.4902];
            app.invLign.Position = [187 23 83 30];
            app.invLign.Value = 1;

            % Create NombredecolonneLabel_3
            app.NombredecolonneLabel_3 = uilabel(app.DimensiondelaMatricePanel);
            app.NombredecolonneLabel_3.HorizontalAlignment = 'center';
            app.NombredecolonneLabel_3.VerticalAlignment = 'center';
            app.NombredecolonneLabel_3.FontSize = 16;
            app.NombredecolonneLabel_3.FontColor = [0.9412 0.9412 0.9412];
            app.NombredecolonneLabel_3.Position = [288.5 26 150 30];
            app.NombredecolonneLabel_3.Text = 'Nombre de  colonne';

            % Create invColon
            app.invColon = uispinner(app.DimensiondelaMatricePanel);
            app.invColon.Limits = [1 1000];
            app.invColon.RoundFractionalValues = 'on';
            app.invColon.ValueDisplayFormat = '%.0f';
            app.invColon.HorizontalAlignment = 'center';
            app.invColon.FontSize = 16;
            app.invColon.FontColor = [1 1 0];
            app.invColon.BackgroundColor = [0.1216 0.3804 0.4902];
            app.invColon.Position = [447 25 90 30];
            app.invColon.Value = 1;

            % Create Button
            app.Button = uibutton(app.tabMath, 'push');
            app.Button.ButtonPushedFcn = createCallbackFcn(app, @aideMathButtonPushed, true);
            app.Button.Icon = 'aide.png';
            app.Button.IconAlignment = 'right';
            app.Button.BackgroundColor = [0.2588 0.4118 0.5216];
            app.Button.FontColor = [1 1 1];
            app.Button.Position = [1142 774 42 31];
            app.Button.Text = '';

            % Create Button_2
            app.Button_2 = uibutton(app.tabMath, 'state');
            app.Button_2.ValueChangedFcn = createCallbackFcn(app, @principal_AproposButtonPushed, true);
            app.Button_2.Icon = 'apropos.png';
            app.Button_2.Text = '';
            app.Button_2.BackgroundColor = [0.2588 0.4118 0.5216];
            app.Button_2.Position = [1189 774 37 31];

            % Create retournAccueilMath
            app.retournAccueilMath = uibutton(app.tabMath, 'push');
            app.retournAccueilMath.ButtonPushedFcn = createCallbackFcn(app, @retournAccueilMathButtonPushed, true);
            app.retournAccueilMath.BackgroundColor = [0.0706 0.4784 0.6];
            app.retournAccueilMath.FontSize = 22;
            app.retournAccueilMath.FontColor = [1 1 1];
            app.retournAccueilMath.Position = [961 770 160 37];
            app.retournAccueilMath.Text = 'Accueil';

            % Create panAccueilMat
            app.panAccueilMat = uipanel(app.tabMath);
            app.panAccueilMat.ForegroundColor = [1 0.9412 0.949];
            app.panAccueilMat.BorderType = 'none';
            app.panAccueilMat.TitlePosition = 'centertop';
            app.panAccueilMat.BackgroundColor = [0.0902 0.3098 0.451];
            app.panAccueilMat.FontWeight = 'bold';
            app.panAccueilMat.FontSize = 20;
            app.panAccueilMat.Position = [7 9 1386 747];

            % Create vectResultat_2
            app.vectResultat_2 = uipanel(app.panAccueilMat);
            app.vectResultat_2.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectResultat_2.BorderType = 'none';
            app.vectResultat_2.TitlePosition = 'centertop';
            app.vectResultat_2.BackgroundColor = [0 0.349 0.4706];
            app.vectResultat_2.FontSize = 20;
            app.vectResultat_2.Position = [19 16 1356 642];

            % Create vectSourceMat_8
            app.vectSourceMat_8 = uipanel(app.vectResultat_2);
            app.vectSourceMat_8.ForegroundColor = [0 1 1];
            app.vectSourceMat_8.BorderType = 'none';
            app.vectSourceMat_8.TitlePosition = 'centertop';
            app.vectSourceMat_8.Title = 'Je vous souhait la bienvenu dans cette partie';
            app.vectSourceMat_8.BackgroundColor = [0.051 0.3216 0.4196];
            app.vectSourceMat_8.FontSize = 22;
            app.vectSourceMat_8.Position = [477 30 852 511];

            % Create lab4
            app.lab4 = uilabel(app.vectSourceMat_8);
            app.lab4.BackgroundColor = [0.051 0.3098 0.4196];
            app.lab4.HorizontalAlignment = 'center';
            app.lab4.VerticalAlignment = 'center';
            app.lab4.FontSize = 26;
            app.lab4.FontColor = [0 1 1];
            app.lab4.Position = [206.5 189 404 34];
            app.lab4.Text = 'Alors, bonne continuation à vous !';

            % Create allerAuSignalBtn
            app.allerAuSignalBtn = uibutton(app.vectSourceMat_8, 'push');
            app.allerAuSignalBtn.ButtonPushedFcn = createCallbackFcn(app, @allerAuSignalBtnButtonPushed, true);
            app.allerAuSignalBtn.BackgroundColor = [0.102 0.4 0.502];
            app.allerAuSignalBtn.FontSize = 22;
            app.allerAuSignalBtn.FontWeight = 'bold';
            app.allerAuSignalBtn.FontColor = [1 1 1];
            app.allerAuSignalBtn.Position = [216 110 385 43];
            app.allerAuSignalBtn.Text = 'Aller au Signal';

            % Create matNB
            app.matNB = uitextarea(app.vectSourceMat_8);
            app.matNB.Editable = 'off';
            app.matNB.FontSize = 20;
            app.matNB.FontColor = [0.9412 0.9412 0.9412];
            app.matNB.BackgroundColor = [0.051 0.3216 0.4196];
            app.matNB.Position = [10 253 830 201];
            app.matNB.Value = {'        '; ' '; ''; '   Dans cette parite nous alons voir les opérations sur la matrice  en choisissant le menu'; '   pour l''opération par le popup menu ci-dessu             '};

            % Create vectSourceMat_4
            app.vectSourceMat_4 = uipanel(app.vectResultat_2);
            app.vectSourceMat_4.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectSourceMat_4.BorderType = 'none';
            app.vectSourceMat_4.TitlePosition = 'centertop';
            app.vectSourceMat_4.Title = 'NB';
            app.vectSourceMat_4.BackgroundColor = [0.051 0.3294 0.4314];
            app.vectSourceMat_4.FontSize = 20;
            app.vectSourceMat_4.Position = [28 30 426 511];

            % Create vectSourceMat_6
            app.vectSourceMat_6 = uipanel(app.vectSourceMat_4);
            app.vectSourceMat_6.ForegroundColor = [0 1 1];
            app.vectSourceMat_6.BorderType = 'none';
            app.vectSourceMat_6.TitlePosition = 'centertop';
            app.vectSourceMat_6.Title = 'Bouton';
            app.vectSourceMat_6.BackgroundColor = [0.051 0.3098 0.4196];
            app.vectSourceMat_6.FontSize = 22;
            app.vectSourceMat_6.Position = [4 5 422 236];

            % Create matCloseBtn
            app.matCloseBtn = uibutton(app.vectSourceMat_6, 'push');
            app.matCloseBtn.ButtonPushedFcn = createCallbackFcn(app, @matCloseBtnButtonPushed, true);
            app.matCloseBtn.Icon = 'sortie.png';
            app.matCloseBtn.BackgroundColor = [0.3882 0.1294 0.3294];
            app.matCloseBtn.FontSize = 22;
            app.matCloseBtn.FontColor = [0.7098 1 0.949];
            app.matCloseBtn.Position = [102 36 215 39];
            app.matCloseBtn.Text = ' Quitter';

            % Create aproposMath
            app.aproposMath = uibutton(app.vectSourceMat_6, 'push');
            app.aproposMath.ButtonPushedFcn = createCallbackFcn(app, @principal_AproposButtonPushed, true);
            app.aproposMath.Icon = 'apropos.png';
            app.aproposMath.BackgroundColor = [0.051 0.3098 0.4196];
            app.aproposMath.FontSize = 22;
            app.aproposMath.FontColor = [0.7098 1 0.949];
            app.aproposMath.Position = [217 115 177 39];
            app.aproposMath.Text = ' A propos';

            % Create aideMath
            app.aideMath = uibutton(app.vectSourceMat_6, 'push');
            app.aideMath.ButtonPushedFcn = createCallbackFcn(app, @aideMathButtonPushed, true);
            app.aideMath.Icon = 'aide.png';
            app.aideMath.BackgroundColor = [0.051 0.3098 0.4196];
            app.aideMath.FontSize = 22;
            app.aideMath.FontColor = [0.7098 1 0.949];
            app.aideMath.Position = [10 115 189 39];
            app.aideMath.Text = ' Aide';

            % Create matBienvenu
            app.matBienvenu = uitextarea(app.vectSourceMat_4);
            app.matBienvenu.Editable = 'off';
            app.matBienvenu.FontSize = 18;
            app.matBienvenu.FontColor = [0.9412 0.9412 0.9412];
            app.matBienvenu.BackgroundColor = [0.051 0.3294 0.4314];
            app.matBienvenu.Position = [1 266 426 188];
            app.matBienvenu.Value = {' '; ''; ' Cette logiciel n''est pas difficile apprendre mais '; ' juste besoin de connaissance sur la matrice.'; ''; ' Tout le reglement de calcul sur la matrice doivent'; ' etres respectée.'};

            % Create vectSourceMat_5
            app.vectSourceMat_5 = uipanel(app.panAccueilMat);
            app.vectSourceMat_5.ForegroundColor = [0.9412 0.9412 0.9412];
            app.vectSourceMat_5.BorderType = 'none';
            app.vectSourceMat_5.TitlePosition = 'centertop';
            app.vectSourceMat_5.Title = 'PAGE D''ACCUEIL POUR LA PARTIE MATHEMATIQUE';
            app.vectSourceMat_5.BackgroundColor = [0.6118 0.1686 0.502];
            app.vectSourceMat_5.FontName = 'Bell MT';
            app.vectSourceMat_5.FontWeight = 'bold';
            app.vectSourceMat_5.FontSize = 36;
            app.vectSourceMat_5.Position = [19 679 1356 52];

            % Create tabSign
            app.tabSign = uitab(app.tableauM);
            app.tabSign.Title = 'TRAITEMENT DU SIGNAL                          ';
            app.tabSign.BackgroundColor = [0.149 0.2314 0.3804];
            app.tabSign.ForegroundColor = [0 0 1];

            % Create panMenu
            app.panMenu = uipanel(app.tabSign);
            app.panMenu.ForegroundColor = [0.8 0.8 0.8];
            app.panMenu.BorderType = 'none';
            app.panMenu.TitlePosition = 'centertop';
            app.panMenu.Visible = 'off';
            app.panMenu.BackgroundColor = [0.0588 0.1608 0.3294];
            app.panMenu.FontWeight = 'bold';
            app.panMenu.FontSize = 20;
            app.panMenu.Position = [2 2 330 762];

            % Create traceFonctionSimple
            app.traceFonctionSimple = uibutton(app.panMenu, 'push');
            app.traceFonctionSimple.ButtonPushedFcn = createCallbackFcn(app, @TracagedunesimplefonctionButtonPushed, true);
            app.traceFonctionSimple.BackgroundColor = [0.051 0.1686 0.349];
            app.traceFonctionSimple.FontSize = 16;
            app.traceFonctionSimple.FontColor = [1 0.9804 1];
            app.traceFonctionSimple.Position = [19 505 286 47];
            app.traceFonctionSimple.Text = 'Traçage d''une simple fonction   ';

            % Create transformerFourier
            app.transformerFourier = uibutton(app.panMenu, 'push');
            app.transformerFourier.ButtonPushedFcn = createCallbackFcn(app, @transformationEnFourierSimplePushed, true);
            app.transformerFourier.BackgroundColor = [0.051 0.1686 0.349];
            app.transformerFourier.FontSize = 16;
            app.transformerFourier.FontColor = [1 1 1];
            app.transformerFourier.Position = [17.5 446 287 44];
            app.transformerFourier.Text = 'Transformation de fourier          ';

            % Create traceConvolution
            app.traceConvolution = uibutton(app.panMenu, 'push');
            app.traceConvolution.ButtonPushedFcn = createCallbackFcn(app, @traceConvolutionButtonPushed, true);
            app.traceConvolution.BackgroundColor = [0.051 0.1686 0.349];
            app.traceConvolution.FontSize = 16;
            app.traceConvolution.FontColor = [1 1 1];
            app.traceConvolution.Position = [19 320 286 46];
            app.traceConvolution.Text = 'Traçage de convolution             ';

            % Create TracagedunBruit
            app.TracagedunBruit = uibutton(app.panMenu, 'push');
            app.TracagedunBruit.ButtonPushedFcn = createCallbackFcn(app, @TracagedunBruitButtonPushed, true);
            app.TracagedunBruit.BackgroundColor = [0.051 0.1686 0.349];
            app.TracagedunBruit.FontSize = 16;
            app.TracagedunBruit.FontColor = [1 1 1];
            app.TracagedunBruit.Position = [19 385 286 45];
            app.TracagedunBruit.Text = 'Traçage d''un signal avec bruit   ';

            % Create menuClose
            app.menuClose = uibutton(app.panMenu, 'push');
            app.menuClose.ButtonPushedFcn = createCallbackFcn(app, @menuCloseButtonPushed, true);
            app.menuClose.Icon = 'retour.png';
            app.menuClose.IconAlignment = 'center';
            app.menuClose.BackgroundColor = [0.1098 0.1608 0.3608];
            app.menuClose.Position = [268 714 46 36];
            app.menuClose.Text = '';

            % Create CloseButton
            app.CloseButton = uibutton(app.panMenu, 'push');
            app.CloseButton.ButtonPushedFcn = createCallbackFcn(app, @CloseButtonPushed, true);
            app.CloseButton.Icon = 'sortie.png';
            app.CloseButton.BackgroundColor = [0.5098 0.2 0.451];
            app.CloseButton.FontSize = 20;
            app.CloseButton.FontColor = [1 1 1];
            app.CloseButton.Position = [26.5 37 271 42];
            app.CloseButton.Text = 'Close';

            % Create tracageEchelon
            app.tracageEchelon = uibutton(app.panMenu, 'push');
            app.tracageEchelon.ButtonPushedFcn = createCallbackFcn(app, @tracageEchelonButtonPushed, true);
            app.tracageEchelon.BackgroundColor = [0.051 0.1686 0.349];
            app.tracageEchelon.FontSize = 16;
            app.tracageEchelon.FontColor = [1 1 1];
            app.tracageEchelon.Position = [19 191 286 46];
            app.tracageEchelon.Text = 'Traçage de signe d''un signal     ';

            % Create aideSignal
            app.aideSignal = uibutton(app.panMenu, 'push');
            app.aideSignal.ButtonPushedFcn = createCallbackFcn(app, @aideSignalButtonPushed, true);
            app.aideSignal.Icon = 'aide.png';
            app.aideSignal.BackgroundColor = [0.1608 0.2706 0.4588];
            app.aideSignal.FontSize = 20;
            app.aideSignal.FontColor = [0 1 1];
            app.aideSignal.Position = [19 117 92 36];
            app.aideSignal.Text = 'Aide';

            % Create Tracagedunsignaldedirac
            app.Tracagedunsignaldedirac = uibutton(app.panMenu, 'push');
            app.Tracagedunsignaldedirac.ButtonPushedFcn = createCallbackFcn(app, @TracagedunsignaldediracPushed, true);
            app.Tracagedunsignaldedirac.BackgroundColor = [0.051 0.1686 0.349];
            app.Tracagedunsignaldedirac.FontSize = 16;
            app.Tracagedunsignaldedirac.FontColor = [1 1 1];
            app.Tracagedunsignaldedirac.Position = [19 256 286 45];
            app.Tracagedunsignaldedirac.Text = 'Traçage d''un signal de dirac      ';

            % Create accueilSignal
            app.accueilSignal = uibutton(app.panMenu, 'push');
            app.accueilSignal.ButtonPushedFcn = createCallbackFcn(app, @accueilSignalButtonPushed, true);
            app.accueilSignal.BackgroundColor = [0.051 0.1686 0.349];
            app.accueilSignal.FontSize = 16;
            app.accueilSignal.FontColor = [1 0.9804 1];
            app.accueilSignal.Position = [19 615 286 39];
            app.accueilSignal.Text = 'Accueil Signal';

            % Create apropos
            app.apropos = uibutton(app.panMenu, 'push');
            app.apropos.ButtonPushedFcn = createCallbackFcn(app, @principal_AproposButtonPushed, true);
            app.apropos.Icon = 'apropos.png';
            app.apropos.BackgroundColor = [0.1608 0.2706 0.4588];
            app.apropos.FontSize = 20;
            app.apropos.FontColor = [0 1 1];
            app.apropos.Position = [147 117 158 36];
            app.apropos.Text = 'A propos';

            % Create TraitementdesignalLabel
            app.TraitementdesignalLabel = uilabel(app.tabSign);
            app.TraitementdesignalLabel.BackgroundColor = [0.4 0.3216 0.5804];
            app.TraitementdesignalLabel.HorizontalAlignment = 'center';
            app.TraitementdesignalLabel.VerticalAlignment = 'center';
            app.TraitementdesignalLabel.FontSize = 22;
            app.TraitementdesignalLabel.FontColor = [1 0.9412 0.9412];
            app.TraitementdesignalLabel.Position = [2 766 330 58];
            app.TraitementdesignalLabel.Text = 'Traitement de signal';

            % Create labTitre
            app.labTitre = uilabel(app.tabSign);
            app.labTitre.BackgroundColor = [0.251 0.349 0.549];
            app.labTitre.HorizontalAlignment = 'center';
            app.labTitre.VerticalAlignment = 'center';
            app.labTitre.FontSize = 28;
            app.labTitre.FontColor = [0 1 1];
            app.labTitre.Position = [333 766 1065 58];
            app.labTitre.Text = 'Page d''accueil du Signal';

            % Create panSimpleFunction
            app.panSimpleFunction = uipanel(app.tabSign);
            app.panSimpleFunction.BorderType = 'none';
            app.panSimpleFunction.Visible = 'off';
            app.panSimpleFunction.BackgroundColor = [0.051 0.2392 0.4];
            app.panSimpleFunction.FontSize = 16;
            app.panSimpleFunction.Position = [333 2 1065 763];

            % Create FonctionEditFieldLabel
            app.FonctionEditFieldLabel = uilabel(app.panSimpleFunction);
            app.FonctionEditFieldLabel.HorizontalAlignment = 'center';
            app.FonctionEditFieldLabel.VerticalAlignment = 'center';
            app.FonctionEditFieldLabel.FontSize = 16;
            app.FonctionEditFieldLabel.FontColor = [1 1 1];
            app.FonctionEditFieldLabel.Position = [31 696 83 28];
            app.FonctionEditFieldLabel.Text = 'Fonction';

            % Create simpleFonction
            app.simpleFonction = uieditfield(app.panSimpleFunction, 'text');
            app.simpleFonction.FontSize = 16;
            app.simpleFonction.FontColor = [0.9412 0.9412 0.9412];
            app.simpleFonction.BackgroundColor = [0.051 0.2392 0.4];
            app.simpleFonction.Position = [113 690 518 36];

            % Create axeSimple
            app.axeSimple = uiaxes(app.panSimpleFunction);
            title(app.axeSimple, 'Title')
            xlabel(app.axeSimple, 'X')
            ylabel(app.axeSimple, 'Y')
            app.axeSimple.FontSize = 14;
            app.axeSimple.FontWeight = 'bold';
            app.axeSimple.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeSimple.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeSimple.LineStyleOrder = {'- '};
            app.axeSimple.LineStyleOrderIndex = 5;
            app.axeSimple.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeSimple.MinorGridColorMode = 'manual';
            app.axeSimple.XColor = [0.902 0.902 0.949];
            app.axeSimple.XColorMode = 'manual';
            app.axeSimple.YColor = [0.902 0.9804 0.902];
            app.axeSimple.YColorMode = 'manual';
            app.axeSimple.LineWidth = 0.8;
            app.axeSimple.Color = [0.051 0.2392 0.4];
            app.axeSimple.XGrid = 'on';
            app.axeSimple.YGrid = 'on';
            app.axeSimple.BackgroundColor = [0.102 0.2784 0.4588];
            app.axeSimple.Position = [113 73 838 474];

            % Create traceSignalSimple
            app.traceSignalSimple = uibutton(app.panSimpleFunction, 'push');
            app.traceSignalSimple.ButtonPushedFcn = createCallbackFcn(app, @traceSignalSimpleButtonPushed, true);
            app.traceSignalSimple.BackgroundColor = [0.0392 0.2902 0.4392];
            app.traceSignalSimple.FontSize = 18;
            app.traceSignalSimple.FontColor = [0.9412 0.9412 0.9412];
            app.traceSignalSimple.Position = [670 692 203 35];
            app.traceSignalSimple.Text = 'Valider';

            % Create BornedelavariablePanel
            app.BornedelavariablePanel = uipanel(app.panSimpleFunction);
            app.BornedelavariablePanel.ForegroundColor = [1 1 1];
            app.BornedelavariablePanel.BorderType = 'none';
            app.BornedelavariablePanel.TitlePosition = 'centertop';
            app.BornedelavariablePanel.Title = 'Borne de la variable';
            app.BornedelavariablePanel.BackgroundColor = [0.102 0.2784 0.4588];
            app.BornedelavariablePanel.FontSize = 18;
            app.BornedelavariablePanel.Position = [113 578 518 98];

            % Create pasSpinnerLabel
            app.pasSpinnerLabel = uilabel(app.BornedelavariablePanel);
            app.pasSpinnerLabel.HorizontalAlignment = 'center';
            app.pasSpinnerLabel.VerticalAlignment = 'center';
            app.pasSpinnerLabel.FontSize = 16;
            app.pasSpinnerLabel.FontColor = [1 1 0];
            app.pasSpinnerLabel.Position = [325 18 48 35];
            app.pasSpinnerLabel.Text = 'pas';

            % Create pasInterval
            app.pasInterval = uispinner(app.BornedelavariablePanel);
            app.pasInterval.Limits = [0.1 1234560];
            app.pasInterval.ValueDisplayFormat = '%.2f';
            app.pasInterval.HorizontalAlignment = 'center';
            app.pasInterval.FontSize = 16;
            app.pasInterval.FontColor = [0 1 1];
            app.pasInterval.BackgroundColor = [0.1216 0.2784 0.4588];
            app.pasInterval.Position = [377 22 84 29];
            app.pasInterval.Value = 0.5;

            % Create infSpinnerLabel
            app.infSpinnerLabel = uilabel(app.BornedelavariablePanel);
            app.infSpinnerLabel.HorizontalAlignment = 'center';
            app.infSpinnerLabel.VerticalAlignment = 'center';
            app.infSpinnerLabel.FontSize = 16;
            app.infSpinnerLabel.FontColor = [1 1 1];
            app.infSpinnerLabel.Position = [23 20 48 32];
            app.infSpinnerLabel.Text = 'inf';

            % Create bornInf
            app.bornInf = uispinner(app.BornedelavariablePanel);
            app.bornInf.Limits = [-12345600 123456700];
            app.bornInf.ValueDisplayFormat = '%.0f';
            app.bornInf.HorizontalAlignment = 'center';
            app.bornInf.FontSize = 18;
            app.bornInf.FontColor = [0 1 0];
            app.bornInf.BackgroundColor = [0.1216 0.2784 0.4588];
            app.bornInf.Position = [70 22 86 27];
            app.bornInf.Value = -50;

            % Create supSpinnerLabel
            app.supSpinnerLabel = uilabel(app.BornedelavariablePanel);
            app.supSpinnerLabel.HorizontalAlignment = 'center';
            app.supSpinnerLabel.VerticalAlignment = 'center';
            app.supSpinnerLabel.FontSize = 16;
            app.supSpinnerLabel.FontColor = [1 1 1];
            app.supSpinnerLabel.Position = [171 19 42 33];
            app.supSpinnerLabel.Text = 'sup';

            % Create bornSup
            app.bornSup = uispinner(app.BornedelavariablePanel);
            app.bornSup.Limits = [-12345600 12345600];
            app.bornSup.ValueDisplayFormat = '%.0f';
            app.bornSup.HorizontalAlignment = 'center';
            app.bornSup.FontSize = 18;
            app.bornSup.FontColor = [0 1 0];
            app.bornSup.BackgroundColor = [0.1216 0.2784 0.4588];
            app.bornSup.Position = [216 22 87 27];
            app.bornSup.Value = 50;

            % Create transformFourier
            app.transformFourier = uipanel(app.tabSign);
            app.transformFourier.BorderType = 'none';
            app.transformFourier.Visible = 'off';
            app.transformFourier.BackgroundColor = [0.102 0.302 0.4392];
            app.transformFourier.Position = [333 2 1065 762];

            % Create FonctionEditFieldLabel_5
            app.FonctionEditFieldLabel_5 = uilabel(app.transformFourier);
            app.FonctionEditFieldLabel_5.HorizontalAlignment = 'center';
            app.FonctionEditFieldLabel_5.VerticalAlignment = 'center';
            app.FonctionEditFieldLabel_5.FontSize = 16;
            app.FonctionEditFieldLabel_5.FontColor = [1 1 1];
            app.FonctionEditFieldLabel_5.Position = [29 686 83 28];
            app.FonctionEditFieldLabel_5.Text = 'Fonction';

            % Create fourierFunction
            app.fourierFunction = uieditfield(app.transformFourier, 'text');
            app.fourierFunction.FontSize = 16;
            app.fourierFunction.FontColor = [0.9412 0.9412 0.9412];
            app.fourierFunction.BackgroundColor = [0.1412 0.349 0.4784];
            app.fourierFunction.Position = [111 684 375 33];

            % Create fourierTransformebtn
            app.fourierTransformebtn = uibutton(app.transformFourier, 'push');
            app.fourierTransformebtn.ButtonPushedFcn = createCallbackFcn(app, @fourierTransformebtnButtonPushed, true);
            app.fourierTransformebtn.BackgroundColor = [0.2196 0.6118 0.6784];
            app.fourierTransformebtn.FontSize = 18;
            app.fourierTransformebtn.FontColor = [0.9412 0.9412 0.9412];
            app.fourierTransformebtn.Position = [299 626 187 39];
            app.fourierTransformebtn.Text = 'Valider';

            % Create borneTransFourier
            app.borneTransFourier = uipanel(app.transformFourier);
            app.borneTransFourier.ForegroundColor = [1 1 1];
            app.borneTransFourier.BorderType = 'none';
            app.borneTransFourier.TitlePosition = 'centertop';
            app.borneTransFourier.Title = 'Borne de la variable';
            app.borneTransFourier.BackgroundColor = [0.149 0.349 0.4784];
            app.borneTransFourier.FontSize = 14;
            app.borneTransFourier.Position = [209 420 277 127];

            % Create pasSpinnerLabel_5
            app.pasSpinnerLabel_5 = uilabel(app.borneTransFourier);
            app.pasSpinnerLabel_5.HorizontalAlignment = 'center';
            app.pasSpinnerLabel_5.VerticalAlignment = 'center';
            app.pasSpinnerLabel_5.FontSize = 16;
            app.pasSpinnerLabel_5.FontColor = [1 1 0];
            app.pasSpinnerLabel_5.Position = [13 24 31 25];
            app.pasSpinnerLabel_5.Text = 'pas';

            % Create pasFourier
            app.pasFourier = uispinner(app.borneTransFourier);
            app.pasFourier.Limits = [-123456 1234560];
            app.pasFourier.ValueDisplayFormat = '%.1f';
            app.pasFourier.HorizontalAlignment = 'center';
            app.pasFourier.FontSize = 16;
            app.pasFourier.FontColor = [0 1 1];
            app.pasFourier.BackgroundColor = [0.149 0.349 0.4784];
            app.pasFourier.Position = [51 25 71 22];
            app.pasFourier.Value = 0.5;

            % Create infSpinnerLabel_5
            app.infSpinnerLabel_5 = uilabel(app.borneTransFourier);
            app.infSpinnerLabel_5.HorizontalAlignment = 'center';
            app.infSpinnerLabel_5.VerticalAlignment = 'center';
            app.infSpinnerLabel_5.FontSize = 16;
            app.infSpinnerLabel_5.FontColor = [1 1 1];
            app.infSpinnerLabel_5.Position = [11 66 33 26];
            app.infSpinnerLabel_5.Text = 'inf';

            % Create infFourier
            app.infFourier = uispinner(app.borneTransFourier);
            app.infFourier.Limits = [-12345600 123456700];
            app.infFourier.HorizontalAlignment = 'center';
            app.infFourier.FontSize = 16;
            app.infFourier.FontColor = [1 1 1];
            app.infFourier.BackgroundColor = [0.149 0.349 0.4784];
            app.infFourier.Position = [51 67 70 22];
            app.infFourier.Value = -10;

            % Create supSpinnerLabel_5
            app.supSpinnerLabel_5 = uilabel(app.borneTransFourier);
            app.supSpinnerLabel_5.HorizontalAlignment = 'center';
            app.supSpinnerLabel_5.VerticalAlignment = 'center';
            app.supSpinnerLabel_5.FontSize = 16;
            app.supSpinnerLabel_5.FontColor = [1 1 1];
            app.supSpinnerLabel_5.Position = [145 67 33 26];
            app.supSpinnerLabel_5.Text = 'sup';

            % Create supFourier
            app.supFourier = uispinner(app.borneTransFourier);
            app.supFourier.Limits = [-1000 12345600];
            app.supFourier.HorizontalAlignment = 'center';
            app.supFourier.FontSize = 16;
            app.supFourier.FontColor = [1 1 1];
            app.supFourier.BackgroundColor = [0.149 0.349 0.4784];
            app.supFourier.Position = [180 68 65 22];
            app.supFourier.Value = 10;

            % Create optionBtn
            app.optionBtn = uibuttongroup(app.transformFourier);
            app.optionBtn.ForegroundColor = [0.9608 0.9804 0.7804];
            app.optionBtn.TitlePosition = 'centertop';
            app.optionBtn.Title = 'Dimension ';
            app.optionBtn.BackgroundColor = [0.149 0.349 0.4784];
            app.optionBtn.FontSize = 16;
            app.optionBtn.Position = [29 420 164 125];

            % Create dimensionSimple
            app.dimensionSimple = uiradiobutton(app.optionBtn);
            app.dimensionSimple.Text = 'Simple';
            app.dimensionSimple.FontSize = 14;
            app.dimensionSimple.FontColor = [1 1 1];
            app.dimensionSimple.Position = [11 71 64.796875 18];
            app.dimensionSimple.Value = true;

            % Create deuxDimension
            app.deuxDimension = uiradiobutton(app.optionBtn);
            app.deuxDimension.Text = '2 Dimension';
            app.deuxDimension.FontSize = 14;
            app.deuxDimension.FontColor = [1 1 1];
            app.deuxDimension.Position = [11 49 99.828125 18];

            % Create nDimension
            app.nDimension = uiradiobutton(app.optionBtn);
            app.nDimension.Text = 'N Dimension';
            app.nDimension.FontSize = 14;
            app.nDimension.FontColor = [1 1 1];
            app.nDimension.Position = [11 27 102.140625 18];

            % Create axeOrigineFourier
            app.axeOrigineFourier = uiaxes(app.transformFourier);
            title(app.axeOrigineFourier, 'Title')
            xlabel(app.axeOrigineFourier, 'X')
            ylabel(app.axeOrigineFourier, 'Y')
            app.axeOrigineFourier.FontSize = 14;
            app.axeOrigineFourier.FontWeight = 'bold';
            app.axeOrigineFourier.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeOrigineFourier.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeOrigineFourier.LineStyleOrder = {'- '};
            app.axeOrigineFourier.LineStyleOrderIndex = 5;
            app.axeOrigineFourier.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeOrigineFourier.MinorGridColorMode = 'manual';
            app.axeOrigineFourier.XColor = [0.902 0.902 0.949];
            app.axeOrigineFourier.XColorMode = 'manual';
            app.axeOrigineFourier.YColor = [0.902 0.9804 0.902];
            app.axeOrigineFourier.YColorMode = 'manual';
            app.axeOrigineFourier.LineWidth = 0.8;
            app.axeOrigineFourier.Color = [0.051 0.2392 0.4];
            app.axeOrigineFourier.XGrid = 'on';
            app.axeOrigineFourier.YGrid = 'on';
            app.axeOrigineFourier.BackgroundColor = [0.2 0.349 0.502];
            app.axeOrigineFourier.Position = [504 423 527 294];

            % Create axeInversFourier
            app.axeInversFourier = uiaxes(app.transformFourier);
            title(app.axeInversFourier, 'Title')
            xlabel(app.axeInversFourier, 'X')
            ylabel(app.axeInversFourier, 'Y')
            app.axeInversFourier.FontSize = 14;
            app.axeInversFourier.FontWeight = 'bold';
            app.axeInversFourier.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeInversFourier.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeInversFourier.LineStyleOrder = {'- '};
            app.axeInversFourier.LineStyleOrderIndex = 5;
            app.axeInversFourier.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeInversFourier.MinorGridAlpha = 0.15;
            app.axeInversFourier.MinorGridColorMode = 'manual';
            app.axeInversFourier.XColor = [0.902 0.902 0.949];
            app.axeInversFourier.XColorMode = 'manual';
            app.axeInversFourier.YColor = [0.902 0.9804 0.902];
            app.axeInversFourier.YColorMode = 'manual';
            app.axeInversFourier.Color = [0.051 0.2392 0.4];
            app.axeInversFourier.XGrid = 'on';
            app.axeInversFourier.YGrid = 'on';
            app.axeInversFourier.BackgroundColor = [0.2 0.349 0.502];
            app.axeInversFourier.Position = [29 66 457 339];

            % Create axeTransformer
            app.axeTransformer = uiaxes(app.transformFourier);
            title(app.axeTransformer, 'Title')
            xlabel(app.axeTransformer, 'X')
            ylabel(app.axeTransformer, 'Y')
            app.axeTransformer.FontSize = 14;
            app.axeTransformer.FontWeight = 'bold';
            app.axeTransformer.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeTransformer.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeTransformer.LineStyleOrder = {'- '};
            app.axeTransformer.LineStyleOrderIndex = 5;
            app.axeTransformer.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeTransformer.MinorGridColorMode = 'manual';
            app.axeTransformer.XColor = [0.902 0.902 0.949];
            app.axeTransformer.XColorMode = 'manual';
            app.axeTransformer.YColor = [0.902 0.9804 0.902];
            app.axeTransformer.YColorMode = 'manual';
            app.axeTransformer.LineWidth = 0.8;
            app.axeTransformer.Color = [0.051 0.2392 0.4];
            app.axeTransformer.XGrid = 'on';
            app.axeTransformer.YGrid = 'on';
            app.axeTransformer.BackgroundColor = [0.2 0.349 0.502];
            app.axeTransformer.Position = [504 67 527 335];

            % Create signalBruit
            app.signalBruit = uipanel(app.tabSign);
            app.signalBruit.BorderType = 'none';
            app.signalBruit.Visible = 'off';
            app.signalBruit.BackgroundColor = [0.051 0.2118 0.4];
            app.signalBruit.FontSize = 16;
            app.signalBruit.Position = [333 2 1065 763];

            % Create FonctionEditFieldLabel_11
            app.FonctionEditFieldLabel_11 = uilabel(app.signalBruit);
            app.FonctionEditFieldLabel_11.HorizontalAlignment = 'center';
            app.FonctionEditFieldLabel_11.VerticalAlignment = 'center';
            app.FonctionEditFieldLabel_11.FontSize = 16;
            app.FonctionEditFieldLabel_11.FontColor = [1 1 1];
            app.FonctionEditFieldLabel_11.Position = [29.5 704 68 20];
            app.FonctionEditFieldLabel_11.Text = 'Signal';

            % Create foncSignalBruit
            app.foncSignalBruit = uieditfield(app.signalBruit, 'text');
            app.foncSignalBruit.FontSize = 16;
            app.foncSignalBruit.FontColor = [0.7804 1 0.8706];
            app.foncSignalBruit.BackgroundColor = [0.051 0.2314 0.4118];
            app.foncSignalBruit.Position = [95 696 536 34];

            % Create traceSignaBruit
            app.traceSignaBruit = uibutton(app.signalBruit, 'push');
            app.traceSignaBruit.ButtonPushedFcn = createCallbackFcn(app, @traceSignaBruitButtonPushed, true);
            app.traceSignaBruit.BackgroundColor = [0.1686 0.3686 0.5294];
            app.traceSignaBruit.FontSize = 18;
            app.traceSignaBruit.FontColor = [0.9412 0.9412 0.9412];
            app.traceSignaBruit.Position = [657 645 192 34];
            app.traceSignaBruit.Text = 'Valider';

            % Create bornBruit
            app.bornBruit = uipanel(app.signalBruit);
            app.bornBruit.ForegroundColor = [1 1 1];
            app.bornBruit.BorderType = 'none';
            app.bornBruit.TitlePosition = 'centertop';
            app.bornBruit.Title = 'Borne de la variable';
            app.bornBruit.BackgroundColor = [0.1216 0.251 0.4314];
            app.bornBruit.FontSize = 18;
            app.bornBruit.Position = [97 523 532 98];

            % Create pasSpinnerLabel_10
            app.pasSpinnerLabel_10 = uilabel(app.bornBruit);
            app.pasSpinnerLabel_10.HorizontalAlignment = 'center';
            app.pasSpinnerLabel_10.VerticalAlignment = 'center';
            app.pasSpinnerLabel_10.FontSize = 16;
            app.pasSpinnerLabel_10.FontColor = [1 1 0];
            app.pasSpinnerLabel_10.Position = [393 21 36 27];
            app.pasSpinnerLabel_10.Text = 't0';

            % Create t0B
            app.t0B = uispinner(app.bornBruit);
            app.t0B.Limits = [-123456 1234560];
            app.t0B.ValueDisplayFormat = '%.2f';
            app.t0B.HorizontalAlignment = 'center';
            app.t0B.FontSize = 16;
            app.t0B.FontColor = [0 1 1];
            app.t0B.BackgroundColor = [0.149 0.302 0.4588];
            app.t0B.Position = [434 21 74 29];
            app.t0B.Value = 0.1;

            % Create infSpinnerLabel_10
            app.infSpinnerLabel_10 = uilabel(app.bornBruit);
            app.infSpinnerLabel_10.HorizontalAlignment = 'center';
            app.infSpinnerLabel_10.VerticalAlignment = 'center';
            app.infSpinnerLabel_10.FontSize = 16;
            app.infSpinnerLabel_10.FontColor = [1 1 1];
            app.infSpinnerLabel_10.Position = [30.5 21 77 25];
            app.infSpinnerLabel_10.Text = 'Amplitude';

            % Create amplitudeB
            app.amplitudeB = uispinner(app.bornBruit);
            app.amplitudeB.Limits = [-12345600 123456700];
            app.amplitudeB.HorizontalAlignment = 'center';
            app.amplitudeB.FontSize = 16;
            app.amplitudeB.FontColor = [0.902 0.902 0.902];
            app.amplitudeB.BackgroundColor = [0.149 0.302 0.4902];
            app.amplitudeB.Position = [114 19 88 28];

            % Create periodeTBruit
            app.periodeTBruit = uilabel(app.bornBruit);
            app.periodeTBruit.HorizontalAlignment = 'center';
            app.periodeTBruit.VerticalAlignment = 'center';
            app.periodeTBruit.FontSize = 16;
            app.periodeTBruit.FontColor = [1 1 1];
            app.periodeTBruit.Position = [222 21 75 26];
            app.periodeTBruit.Text = 'Periode T';

            % Create periodeB
            app.periodeB = uispinner(app.bornBruit);
            app.periodeB.Limits = [-12345600 12345600];
            app.periodeB.HorizontalAlignment = 'center';
            app.periodeB.FontSize = 16;
            app.periodeB.FontColor = [0.902 0.902 0.902];
            app.periodeB.BackgroundColor = [0.1608 0.3098 0.4902];
            app.periodeB.Position = [302 21 72 26];
            app.periodeB.Value = 1;

            % Create axeSignalAvecBruit
            app.axeSignalAvecBruit = uiaxes(app.signalBruit);
            title(app.axeSignalAvecBruit, 'Title')
            xlabel(app.axeSignalAvecBruit, 'X')
            ylabel(app.axeSignalAvecBruit, 'Y')
            app.axeSignalAvecBruit.FontSize = 14;
            app.axeSignalAvecBruit.FontWeight = 'bold';
            app.axeSignalAvecBruit.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeSignalAvecBruit.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeSignalAvecBruit.LineStyleOrder = {'- '};
            app.axeSignalAvecBruit.LineStyleOrderIndex = 5;
            app.axeSignalAvecBruit.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeSignalAvecBruit.MinorGridColorMode = 'manual';
            app.axeSignalAvecBruit.XColor = [0.902 0.902 0.949];
            app.axeSignalAvecBruit.XColorMode = 'manual';
            app.axeSignalAvecBruit.YColor = [0.902 0.9804 0.902];
            app.axeSignalAvecBruit.YColorMode = 'manual';
            app.axeSignalAvecBruit.LineWidth = 0.8;
            app.axeSignalAvecBruit.Color = [0.051 0.2392 0.4118];
            app.axeSignalAvecBruit.XGrid = 'on';
            app.axeSignalAvecBruit.YGrid = 'on';
            app.axeSignalAvecBruit.BackgroundColor = [0.1216 0.251 0.4314];
            app.axeSignalAvecBruit.Position = [25 67 512 414];

            % Create FonctionEditFieldLabel_12
            app.FonctionEditFieldLabel_12 = uilabel(app.signalBruit);
            app.FonctionEditFieldLabel_12.HorizontalAlignment = 'center';
            app.FonctionEditFieldLabel_12.VerticalAlignment = 'center';
            app.FonctionEditFieldLabel_12.FontSize = 16;
            app.FonctionEditFieldLabel_12.FontColor = [1 1 1];
            app.FonctionEditFieldLabel_12.Position = [38.5 657 56 20];
            app.FonctionEditFieldLabel_12.Text = 'Bruit';

            % Create foncBruit
            app.foncBruit = uieditfield(app.signalBruit, 'text');
            app.foncBruit.FontSize = 16;
            app.foncBruit.FontColor = [1 0.8314 0.8706];
            app.foncBruit.BackgroundColor = [0.051 0.2314 0.4118];
            app.foncBruit.Position = [95 645 534 34];

            % Create axeResBruit
            app.axeResBruit = uiaxes(app.signalBruit);
            title(app.axeResBruit, 'Title')
            xlabel(app.axeResBruit, 'X')
            ylabel(app.axeResBruit, 'Y')
            app.axeResBruit.FontSize = 14;
            app.axeResBruit.FontWeight = 'bold';
            app.axeResBruit.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeResBruit.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeResBruit.LineStyleOrder = {'- '};
            app.axeResBruit.LineStyleOrderIndex = 5;
            app.axeResBruit.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeResBruit.MinorGridColorMode = 'manual';
            app.axeResBruit.XColor = [0.902 0.902 0.949];
            app.axeResBruit.XColorMode = 'manual';
            app.axeResBruit.YColor = [0.902 0.9804 0.902];
            app.axeResBruit.YColorMode = 'manual';
            app.axeResBruit.LineWidth = 0.8;
            app.axeResBruit.Color = [0.0784 0.2 0.3608];
            app.axeResBruit.XGrid = 'on';
            app.axeResBruit.YGrid = 'on';
            app.axeResBruit.BackgroundColor = [0.1216 0.251 0.4314];
            app.axeResBruit.Position = [551 67 497 414];

            % Create signalDirac
            app.signalDirac = uipanel(app.tabSign);
            app.signalDirac.BorderType = 'none';
            app.signalDirac.Visible = 'off';
            app.signalDirac.BackgroundColor = [0.0392 0.2392 0.4196];
            app.signalDirac.FontSize = 16;
            app.signalDirac.Position = [333 2 1065 763];

            % Create FonctionEditFieldLabel_13
            app.FonctionEditFieldLabel_13 = uilabel(app.signalDirac);
            app.FonctionEditFieldLabel_13.HorizontalAlignment = 'center';
            app.FonctionEditFieldLabel_13.VerticalAlignment = 'center';
            app.FonctionEditFieldLabel_13.FontSize = 16;
            app.FonctionEditFieldLabel_13.FontColor = [1 1 1];
            app.FonctionEditFieldLabel_13.Position = [33.5 712 50 20];
            app.FonctionEditFieldLabel_13.Text = 'Signal';

            % Create foncDirac
            app.foncDirac = uieditfield(app.signalDirac, 'text');
            app.foncDirac.FontSize = 16;
            app.foncDirac.FontColor = [1 0.8392 0.7804];
            app.foncDirac.BackgroundColor = [0 0.2314 0.4196];
            app.foncDirac.Position = [94 701 516 37];

            % Create tracerDirac
            app.tracerDirac = uibutton(app.signalDirac, 'push');
            app.tracerDirac.ButtonPushedFcn = createCallbackFcn(app, @tracerDiracButtonPushed, true);
            app.tracerDirac.BackgroundColor = [0.102 0.3412 0.502];
            app.tracerDirac.FontSize = 18;
            app.tracerDirac.FontColor = [0.749 0.9882 1];
            app.tracerDirac.Position = [619 700 339 40];
            app.tracerDirac.Text = 'Tracer la fonction';

            % Create BorneDirac
            app.BorneDirac = uipanel(app.signalDirac);
            app.BorneDirac.ForegroundColor = [1 1 1];
            app.BorneDirac.BorderType = 'none';
            app.BorneDirac.TitlePosition = 'centertop';
            app.BorneDirac.Title = 'Borne de la variable';
            app.BorneDirac.BackgroundColor = [0.149 0.2706 0.451];
            app.BorneDirac.FontSize = 18;
            app.BorneDirac.Position = [94 498 236 178];

            % Create diracLabelT0
            app.diracLabelT0 = uilabel(app.BorneDirac);
            app.diracLabelT0.HorizontalAlignment = 'center';
            app.diracLabelT0.VerticalAlignment = 'center';
            app.diracLabelT0.FontSize = 16;
            app.diracLabelT0.FontColor = [1 1 0];
            app.diracLabelT0.Position = [67 18 43 33];
            app.diracLabelT0.Text = 't0';

            % Create t0Dirac
            app.t0Dirac = uispinner(app.BorneDirac);
            app.t0Dirac.Limits = [-123456 1234560];
            app.t0Dirac.ValueDisplayFormat = '%.2f';
            app.t0Dirac.HorizontalAlignment = 'center';
            app.t0Dirac.FontSize = 16;
            app.t0Dirac.FontColor = [0 1 1];
            app.t0Dirac.BackgroundColor = [0.149 0.3098 0.4784];
            app.t0Dirac.Position = [110 23 76 26];
            app.t0Dirac.Value = 1;

            % Create amplitudDiracLabel
            app.amplitudDiracLabel = uilabel(app.BorneDirac);
            app.amplitudDiracLabel.HorizontalAlignment = 'center';
            app.amplitudDiracLabel.VerticalAlignment = 'center';
            app.amplitudDiracLabel.FontSize = 16;
            app.amplitudDiracLabel.FontColor = [1 1 1];
            app.amplitudDiracLabel.Position = [21.5 119 77 27];
            app.amplitudDiracLabel.Text = 'Amplitude';

            % Create amplitudeDirac
            app.amplitudeDirac = uispinner(app.BorneDirac);
            app.amplitudeDirac.Limits = [-12345600 123456700];
            app.amplitudeDirac.ValueDisplayFormat = '%.1f';
            app.amplitudeDirac.HorizontalAlignment = 'center';
            app.amplitudeDirac.FontSize = 16;
            app.amplitudeDirac.FontColor = [0.9412 0.9412 0.9412];
            app.amplitudeDirac.BackgroundColor = [0.149 0.3098 0.4784];
            app.amplitudeDirac.Position = [110 119 76 26];
            app.amplitudeDirac.Value = 1;

            % Create periodeTDiracLabel
            app.periodeTDiracLabel = uilabel(app.BorneDirac);
            app.periodeTDiracLabel.HorizontalAlignment = 'center';
            app.periodeTDiracLabel.VerticalAlignment = 'center';
            app.periodeTDiracLabel.FontSize = 16;
            app.periodeTDiracLabel.FontColor = [1 1 1];
            app.periodeTDiracLabel.Position = [30 70 75 29];
            app.periodeTDiracLabel.Text = 'Periode T';

            % Create periodeDirac
            app.periodeDirac = uispinner(app.BorneDirac);
            app.periodeDirac.Limits = [-12345600 12345600];
            app.periodeDirac.ValueDisplayFormat = '%.1f';
            app.periodeDirac.HorizontalAlignment = 'center';
            app.periodeDirac.FontSize = 16;
            app.periodeDirac.FontColor = [0.9412 0.9412 0.9412];
            app.periodeDirac.BackgroundColor = [0.149 0.3098 0.4784];
            app.periodeDirac.Position = [110 73 76 26];
            app.periodeDirac.Value = 1;

            % Create axeDirac
            app.axeDirac = uiaxes(app.signalDirac);
            title(app.axeDirac, 'Title')
            xlabel(app.axeDirac, 'X')
            ylabel(app.axeDirac, 'Y')
            app.axeDirac.FontSize = 14;
            app.axeDirac.FontWeight = 'bold';
            app.axeDirac.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeDirac.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeDirac.LineStyleOrder = {'- '};
            app.axeDirac.LineStyleOrderIndex = 5;
            app.axeDirac.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeDirac.MinorGridColorMode = 'manual';
            app.axeDirac.XColor = [0.902 0.902 0.949];
            app.axeDirac.XColorMode = 'manual';
            app.axeDirac.YColor = [0.902 0.9804 0.902];
            app.axeDirac.YColorMode = 'manual';
            app.axeDirac.LineWidth = 0.8;
            app.axeDirac.Color = [0.1216 0.2314 0.4314];
            app.axeDirac.XGrid = 'on';
            app.axeDirac.YGrid = 'on';
            app.axeDirac.BackgroundColor = [0.149 0.2706 0.451];
            app.axeDirac.Position = [94 52 864 416];

            % Create diracOptionBouton
            app.diracOptionBouton = uibuttongroup(app.signalDirac);
            app.diracOptionBouton.SelectionChangedFcn = createCallbackFcn(app, @diracOptionBoutonSelectionChanged, true);
            app.diracOptionBouton.ForegroundColor = [0 1 1];
            app.diracOptionBouton.BorderType = 'none';
            app.diracOptionBouton.TitlePosition = 'centertop';
            app.diracOptionBouton.Title = 'Type de Signal';
            app.diracOptionBouton.BackgroundColor = [0.149 0.2706 0.451];
            app.diracOptionBouton.FontSize = 18;
            app.diracOptionBouton.Position = [338 498 272 178];

            % Create optionDirac
            app.optionDirac = uiradiobutton(app.diracOptionBouton);
            app.optionDirac.Text = 'Trace de dirac';
            app.optionDirac.FontSize = 16;
            app.optionDirac.FontColor = [1 1 1];
            app.optionDirac.Position = [34 120 123.671875 20];
            app.optionDirac.Value = true;

            % Create optionRectagnle
            app.optionRectagnle = uiradiobutton(app.diracOptionBouton);
            app.optionRectagnle.Text = 'Trace d''un rectangle';
            app.optionRectagnle.FontSize = 16;
            app.optionRectagnle.FontColor = [1 1 1];
            app.optionRectagnle.Position = [34 90 166.765625 20];

            % Create optionTriangle
            app.optionTriangle = uiradiobutton(app.diracOptionBouton);
            app.optionTriangle.Text = 'Trace d''un triangle';
            app.optionTriangle.FontSize = 18;
            app.optionTriangle.FontColor = [1 1 1];
            app.optionTriangle.Position = [34 57 169.859375 23];

            % Create optionEchelon
            app.optionEchelon = uiradiobutton(app.diracOptionBouton);
            app.optionEchelon.Text = 'Trace d''échelon';
            app.optionEchelon.FontSize = 18;
            app.optionEchelon.FontColor = [1 1 1];
            app.optionEchelon.Position = [35 26 148.84375 23];

            % Create BorneDirac_2
            app.BorneDirac_2 = uipanel(app.signalDirac);
            app.BorneDirac_2.ForegroundColor = [1 1 1];
            app.BorneDirac_2.BorderType = 'none';
            app.BorneDirac_2.TitlePosition = 'centertop';
            app.BorneDirac_2.Title = 'Le notation du signal dans le cas théorie';
            app.BorneDirac_2.BackgroundColor = [0.149 0.2706 0.451];
            app.BorneDirac_2.FontSize = 18;
            app.BorneDirac_2.Position = [619 498 339 178];

            % Create amplitudDiracLabel_2
            app.amplitudDiracLabel_2 = uilabel(app.BorneDirac_2);
            app.amplitudDiracLabel_2.VerticalAlignment = 'center';
            app.amplitudDiracLabel_2.FontSize = 16;
            app.amplitudDiracLabel_2.FontColor = [1 1 1];
            app.amplitudDiracLabel_2.Position = [0.5 123 305 20];
            app.amplitudDiracLabel_2.Text = '   s(t) =  A*dirac(t-t0)    | [  A = amplitude  ]';

            % Create amplitudDiracLabel_3
            app.amplitudDiracLabel_3 = uilabel(app.BorneDirac_2);
            app.amplitudDiracLabel_3.VerticalAlignment = 'center';
            app.amplitudDiracLabel_3.FontSize = 16;
            app.amplitudDiracLabel_3.FontColor = [1 1 1];
            app.amplitudDiracLabel_3.Position = [1 89 277 20];
            app.amplitudDiracLabel_3.Text = '   s(t) = A*rect((t-t0)/T)  | [ to = centre ]';

            % Create amplitudDiracLabel_4
            app.amplitudDiracLabel_4 = uilabel(app.BorneDirac_2);
            app.amplitudDiracLabel_4.VerticalAlignment = 'center';
            app.amplitudDiracLabel_4.FontSize = 16;
            app.amplitudDiracLabel_4.FontColor = [1 1 1];
            app.amplitudDiracLabel_4.Position = [1 55 339 20];
            app.amplitudDiracLabel_4.Text = '   s(t) = A*tri((t-t0)/T)  | [ to = centre ]';

            % Create amplitudDiracLabel_6
            app.amplitudDiracLabel_6 = uilabel(app.BorneDirac_2);
            app.amplitudDiracLabel_6.VerticalAlignment = 'center';
            app.amplitudDiracLabel_6.FontSize = 16;
            app.amplitudDiracLabel_6.FontColor = [1 1 1];
            app.amplitudDiracLabel_6.Position = [1 24 300 20];
            app.amplitudDiracLabel_6.Text = '   s(t) = A*£(t-t0) ';

            % Create panConvolution
            app.panConvolution = uipanel(app.tabSign);
            app.panConvolution.BorderType = 'none';
            app.panConvolution.Visible = 'off';
            app.panConvolution.BackgroundColor = [0.1098 0.302 0.451];
            app.panConvolution.FontSize = 16;
            app.panConvolution.Position = [333 2 1065 763];

            % Create rectangleLabelFunc
            app.rectangleLabelFunc = uilabel(app.panConvolution);
            app.rectangleLabelFunc.HorizontalAlignment = 'center';
            app.rectangleLabelFunc.VerticalAlignment = 'center';
            app.rectangleLabelFunc.FontSize = 16;
            app.rectangleLabelFunc.FontColor = [1 1 1];
            app.rectangleLabelFunc.Position = [32 702 63 20];
            app.rectangleLabelFunc.Text = 'Signal 1';

            % Create foncConv1
            app.foncConv1 = uieditfield(app.panConvolution, 'text');
            app.foncConv1.FontSize = 16;
            app.foncConv1.FontColor = [1 1 0.8196];
            app.foncConv1.BackgroundColor = [0.102 0.302 0.451];
            app.foncConv1.Position = [97 696 594 32];

            % Create tracerConvolution
            app.tracerConvolution = uibutton(app.panConvolution, 'push');
            app.tracerConvolution.ButtonPushedFcn = createCallbackFcn(app, @tracerConvolutionButtonPushed, true);
            app.tracerConvolution.BackgroundColor = [0.2 0.651 0.749];
            app.tracerConvolution.FontSize = 18;
            app.tracerConvolution.FontColor = [1 1 1];
            app.tracerConvolution.Position = [709 690 241 40];
            app.tracerConvolution.Text = 'Valider';

            % Create BorneConvolution
            app.BorneConvolution = uipanel(app.panConvolution);
            app.BorneConvolution.ForegroundColor = [1 1 1];
            app.BorneConvolution.BorderType = 'none';
            app.BorneConvolution.TitlePosition = 'centertop';
            app.BorneConvolution.Title = 'Borne de la variable';
            app.BorneConvolution.BackgroundColor = [0.2 0.349 0.502];
            app.BorneConvolution.FontSize = 18;
            app.BorneConvolution.Position = [97 517 594 98];

            % Create rectangleLabelT0
            app.rectangleLabelT0 = uilabel(app.BorneConvolution);
            app.rectangleLabelT0.HorizontalAlignment = 'center';
            app.rectangleLabelT0.VerticalAlignment = 'center';
            app.rectangleLabelT0.FontSize = 16;
            app.rectangleLabelT0.FontColor = [1 1 0];
            app.rectangleLabelT0.Position = [368 23 82 27];
            app.rectangleLabelT0.Text = 'Frequence';

            % Create freqConv
            app.freqConv = uispinner(app.BorneConvolution);
            app.freqConv.Limits = [1 1234560];
            app.freqConv.ValueDisplayFormat = '%.1f';
            app.freqConv.HorizontalAlignment = 'center';
            app.freqConv.FontSize = 16;
            app.freqConv.FontColor = [0 1 1];
            app.freqConv.BackgroundColor = [0.149 0.3412 0.502];
            app.freqConv.Position = [454 23 109 28];
            app.freqConv.Value = 100;

            % Create amplitudRectangleLabel
            app.amplitudRectangleLabel = uilabel(app.BorneConvolution);
            app.amplitudRectangleLabel.HorizontalAlignment = 'center';
            app.amplitudRectangleLabel.VerticalAlignment = 'center';
            app.amplitudRectangleLabel.FontSize = 16;
            app.amplitudRectangleLabel.FontColor = [1 1 1];
            app.amplitudRectangleLabel.Position = [47.5 20 25 30];
            app.amplitudRectangleLabel.Text = 'Inf';

            % Create infConv
            app.infConv = uispinner(app.BorneConvolution);
            app.infConv.Limits = [-12345600 123456700];
            app.infConv.HorizontalAlignment = 'center';
            app.infConv.FontSize = 16;
            app.infConv.FontColor = [0 1 0];
            app.infConv.BackgroundColor = [0.149 0.3412 0.502];
            app.infConv.Position = [82 22 88 27];
            app.infConv.Value = -10;

            % Create periodeRectangleLabel
            app.periodeRectangleLabel = uilabel(app.BorneConvolution);
            app.periodeRectangleLabel.HorizontalAlignment = 'center';
            app.periodeRectangleLabel.VerticalAlignment = 'center';
            app.periodeRectangleLabel.FontSize = 16;
            app.periodeRectangleLabel.FontColor = [1 1 1];
            app.periodeRectangleLabel.Position = [200.5 25 36 25];
            app.periodeRectangleLabel.Text = 'Sup';

            % Create supConv
            app.supConv = uispinner(app.BorneConvolution);
            app.supConv.Limits = [-12345600 12345600];
            app.supConv.HorizontalAlignment = 'center';
            app.supConv.FontSize = 16;
            app.supConv.FontColor = [0 1 0];
            app.supConv.BackgroundColor = [0.149 0.3412 0.502];
            app.supConv.Position = [240 22 81 29];
            app.supConv.Value = 10;

            % Create rectangleLabelFunc_2
            app.rectangleLabelFunc_2 = uilabel(app.panConvolution);
            app.rectangleLabelFunc_2.HorizontalAlignment = 'center';
            app.rectangleLabelFunc_2.VerticalAlignment = 'center';
            app.rectangleLabelFunc_2.FontSize = 16;
            app.rectangleLabelFunc_2.FontColor = [1 1 1];
            app.rectangleLabelFunc_2.Position = [32.5 652 63 20];
            app.rectangleLabelFunc_2.Text = 'Signal 2';

            % Create foncConv2
            app.foncConv2 = uieditfield(app.panConvolution, 'text');
            app.foncConv2.FontSize = 16;
            app.foncConv2.FontColor = [1 1 0.8196];
            app.foncConv2.BackgroundColor = [0.102 0.302 0.451];
            app.foncConv2.Position = [98 645 594 33];

            % Create axeConvolution
            app.axeConvolution = uiaxes(app.panConvolution);
            title(app.axeConvolution, 'Title')
            xlabel(app.axeConvolution, 'X')
            ylabel(app.axeConvolution, 'Y')
            app.axeConvolution.FontSize = 14;
            app.axeConvolution.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeConvolution.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeConvolution.LineStyleOrder = {'- '};
            app.axeConvolution.LineStyleOrderIndex = 5;
            app.axeConvolution.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeConvolution.MinorGridAlpha = 0.15;
            app.axeConvolution.MinorGridColorMode = 'manual';
            app.axeConvolution.XColor = [0.902 0.902 0.949];
            app.axeConvolution.XColorMode = 'manual';
            app.axeConvolution.YColor = [0.902 0.9804 0.902];
            app.axeConvolution.YColorMode = 'manual';
            app.axeConvolution.Color = [0.102 0.2902 0.451];
            app.axeConvolution.XGrid = 'on';
            app.axeConvolution.YGrid = 'on';
            app.axeConvolution.BackgroundColor = [0.2 0.349 0.502];
            app.axeConvolution.Position = [97 48 853 422];

            % Create panSign
            app.panSign = uipanel(app.tabSign);
            app.panSign.BorderType = 'none';
            app.panSign.TitlePosition = 'centertop';
            app.panSign.Visible = 'off';
            app.panSign.BackgroundColor = [0.149 0.302 0.4902];
            app.panSign.Position = [333 2 1065 763];

            % Create functionPeriodique_2
            app.functionPeriodique_2 = uilabel(app.panSign);
            app.functionPeriodique_2.HorizontalAlignment = 'center';
            app.functionPeriodique_2.VerticalAlignment = 'center';
            app.functionPeriodique_2.FontSize = 16;
            app.functionPeriodique_2.FontColor = [1 1 1];
            app.functionPeriodique_2.Position = [8 692 76 28];
            app.functionPeriodique_2.Text = 'Fonction';

            % Create fonctionSign
            app.fonctionSign = uieditfield(app.panSign, 'text');
            app.fonctionSign.FontSize = 16;
            app.fonctionSign.FontColor = [1 1 1];
            app.fonctionSign.BackgroundColor = [0.251 0.3608 0.5412];
            app.fonctionSign.Position = [85 688 473 33];

            % Create signBoutonValider
            app.signBoutonValider = uibutton(app.panSign, 'push');
            app.signBoutonValider.ButtonPushedFcn = createCallbackFcn(app, @signBoutonValiderButtonPushed, true);
            app.signBoutonValider.BackgroundColor = [0.2118 0.3216 0.5412];
            app.signBoutonValider.FontSize = 18;
            app.signBoutonValider.FontColor = [1 1 1];
            app.signBoutonValider.Position = [764 687 201 35];
            app.signBoutonValider.Text = 'Tracer';

            % Create signOption
            app.signOption = uidropdown(app.panSign);
            app.signOption.Items = {'sin(t)', 'sinc(t)', 'tan(t)'};
            app.signOption.ValueChangedFcn = createCallbackFcn(app, @signOptionValueChanged, true);
            app.signOption.FontSize = 16;
            app.signOption.FontColor = [1 1 1];
            app.signOption.BackgroundColor = [0.4196 0.7804 0.9294];
            app.signOption.Position = [569 687 177 34];
            app.signOption.Value = 'sin(t)';

            % Create indication_de_sign
            app.indication_de_sign = uipanel(app.panSign);
            app.indication_de_sign.ForegroundColor = [1 1 1];
            app.indication_de_sign.BorderType = 'none';
            app.indication_de_sign.TitlePosition = 'centertop';
            app.indication_de_sign.Title = 'Indication de la traçage d''un signe';
            app.indication_de_sign.BackgroundColor = [0.2314 0.349 0.5098];
            app.indication_de_sign.FontSize = 18;
            app.indication_de_sign.Position = [83 518 663 146];

            % Create LatraagedesignedunsgnalsefaitcommececiLabel
            app.LatraagedesignedunsgnalsefaitcommececiLabel = uilabel(app.indication_de_sign);
            app.LatraagedesignedunsgnalsefaitcommececiLabel.VerticalAlignment = 'center';
            app.LatraagedesignedunsgnalsefaitcommececiLabel.FontSize = 16;
            app.LatraagedesignedunsgnalsefaitcommececiLabel.FontColor = [1 1 1];
            app.LatraagedesignedunsgnalsefaitcommececiLabel.Position = [16.5 83 369 29];
            app.LatraagedesignedunsgnalsefaitcommececiLabel.Text = 'La traçage de signe d''un sgnal se fait comme ceci ';

            % Create stsignt1sit0etLabel
            app.stsignt1sit0etLabel = uilabel(app.indication_de_sign);
            app.stsignt1sit0etLabel.VerticalAlignment = 'center';
            app.stsignt1sit0etLabel.FontSize = 16;
            app.stsignt1sit0etLabel.FontColor = [1 1 1];
            app.stsignt1sit0etLabel.Position = [19 59 236 20];
            app.stsignt1sit0etLabel.Text = 's(t) =  sign(t)  =  -1    si t < 0    et';

            % Create stsignt1sit0Label
            app.stsignt1sit0Label = uilabel(app.indication_de_sign);
            app.stsignt1sit0Label.VerticalAlignment = 'center';
            app.stsignt1sit0Label.FontSize = 16;
            app.stsignt1sit0Label.FontColor = [1 1 1];
            app.stsignt1sit0Label.Position = [19 23 216 20];
            app.stsignt1sit0Label.Text = 's(t) =  sign(t)  =  1    si t > 0    ';

            % Create axeSign
            app.axeSign = uiaxes(app.panSign);
            title(app.axeSign, 'Title')
            xlabel(app.axeSign, 'X')
            ylabel(app.axeSign, 'Y')
            app.axeSign.FontSize = 14;
            app.axeSign.Colormap = [0.243137254901961 0.149019607843137 0.658823529411765;0.250980392156863 0.164705882352941 0.705882352941177;0.258823529411765 0.180392156862745 0.752941176470588;0.266666666666667 0.196078431372549 0.796078431372549;0.270588235294118 0.215686274509804 0.835294117647059;0.274509803921569 0.235294117647059 0.870588235294118;0.27843137254902 0.254901960784314 0.898039215686275;0.282352941176471 0.301960784313725 0.941176470588235;0.282352941176471 0.32156862745098 0.956862745098039;0.27843137254902 0.345098039215686 0.972549019607843;0.274509803921569 0.368627450980392 0.984313725490196;0.270588235294118 0.388235294117647 0.992156862745098;0.258823529411765 0.411764705882353 0.996078431372549;0.243137254901961 0.435294117647059 1;0.219607843137255 0.458823529411765 0.996078431372549;0.196078431372549 0.486274509803922 0.988235294117647;0.184313725490196 0.505882352941176 0.980392156862745;0.180392156862745 0.529411764705882 0.968627450980392;0.176470588235294 0.549019607843137 0.952941176470588;0.168627450980392 0.568627450980392 0.937254901960784;0.152941176470588 0.592156862745098 0.92156862745098;0.145098039215686 0.607843137254902 0.909803921568627;0.137254901960784 0.627450980392157 0.898039215686275;0.125490196078431 0.647058823529412 0.890196078431373;0.109803921568627 0.662745098039216 0.874509803921569;0.0941176470588235 0.67843137254902 0.858823529411765;0.0705882352941176 0.694117647058824 0.83921568627451;0.0313725490196078 0.709803921568627 0.815686274509804;0.00392156862745098 0.72156862745098 0.792156862745098;0.00784313725490196 0.729411764705882 0.764705882352941;0.0431372549019608 0.741176470588235 0.741176470588235;0.0980392156862745 0.749019607843137 0.713725490196078;0.141176470588235 0.756862745098039 0.682352941176471;0.172549019607843 0.768627450980392 0.654901960784314;0.192156862745098 0.776470588235294 0.623529411764706;0.215686274509804 0.784313725490196 0.592156862745098;0.247058823529412 0.792156862745098 0.556862745098039;0.290196078431373 0.796078431372549 0.517647058823529;0.341176470588235 0.8 0.47843137254902;0.392156862745098 0.803921568627451 0.435294117647059;0.447058823529412 0.803921568627451 0.392156862745098;0.505882352941176 0.8 0.349019607843137;0.56078431372549 0.796078431372549 0.305882352941176;0.615686274509804 0.788235294117647 0.262745098039216;0.670588235294118 0.780392156862745 0.223529411764706;0.725490196078431 0.768627450980392 0.192156862745098;0.772549019607843 0.76078431372549 0.164705882352941;0.819607843137255 0.749019607843137 0.152941176470588;0.862745098039216 0.741176470588235 0.16078431372549;0.901960784313726 0.733333333333333 0.176470588235294;0.941176470588235 0.729411764705882 0.211764705882353;0.972549019607843 0.729411764705882 0.23921568627451;0.996078431372549 0.745098039215686 0.235294117647059;0.996078431372549 0.764705882352941 0.219607843137255;0.996078431372549 0.788235294117647 0.203921568627451;0.988235294117647 0.811764705882353 0.188235294117647;0.980392156862745 0.83921568627451 0.176470588235294;0.968627450980392 0.862745098039216 0.164705882352941;0.96078431372549 0.890196078431373 0.152941176470588;0.96078431372549 0.913725490196078 0.141176470588235;0.964705882352941 0.937254901960784 0.125490196078431;0.968627450980392 0.96078431372549 0.105882352941176;0.976470588235294 0.984313725490196 0.0823529411764706];
            app.axeSign.ColorOrder = [0.949019607843137 0.890196078431373 0.901960784313726;0.929411764705882 0.694117647058824 0.125490196078431;0.988235294117647 0.901960784313726 0;0.466666666666667 0.674509803921569 0.188235294117647;0.301960784313725 0.745098039215686 0.933333333333333;0.635294117647059 0.0784313725490196 0.184313725490196];
            app.axeSign.LineStyleOrder = {'- '};
            app.axeSign.LineStyleOrderIndex = 5;
            app.axeSign.MinorGridColor = [0.451 0.4902 0.6392];
            app.axeSign.MinorGridAlpha = 0.15;
            app.axeSign.MinorGridColorMode = 'manual';
            app.axeSign.XColor = [0.902 0.902 0.949];
            app.axeSign.XColorMode = 'manual';
            app.axeSign.YColor = [0.902 0.9804 0.902];
            app.axeSign.YColorMode = 'manual';
            app.axeSign.Color = [0.102 0.2902 0.451];
            app.axeSign.XGrid = 'on';
            app.axeSign.YGrid = 'on';
            app.axeSign.BackgroundColor = [0.2 0.349 0.502];
            app.axeSign.Position = [85 46 880 422];

            % Create menuShow
            app.menuShow = uibutton(app.tabSign, 'push');
            app.menuShow.ButtonPushedFcn = createCallbackFcn(app, @menuShowButtonPushed, true);
            app.menuShow.Icon = 'icons8_windows8_48px.png';
            app.menuShow.BackgroundColor = [0.149 0.2314 0.4118];
            app.menuShow.FontColor = [0.9412 0.9412 0.9412];
            app.menuShow.Position = [7 715 55 37];
            app.menuShow.Text = '';

            % Create panAccueilS
            app.panAccueilS = uipanel(app.tabSign);
            app.panAccueilS.ForegroundColor = [1 0.9412 0.949];
            app.panAccueilS.BorderType = 'none';
            app.panAccueilS.TitlePosition = 'centertop';
            app.panAccueilS.BackgroundColor = [0.051 0.2392 0.4118];
            app.panAccueilS.FontWeight = 'bold';
            app.panAccueilS.FontSize = 20;
            app.panAccueilS.Position = [73 2 1325 763];

            % Create titreSignal
            app.titreSignal = uipanel(app.panAccueilS);
            app.titreSignal.ForegroundColor = [0.9412 0.9412 0.9412];
            app.titreSignal.BorderType = 'none';
            app.titreSignal.TitlePosition = 'centertop';
            app.titreSignal.Title = 'Partie de Traitement de Signal';
            app.titreSignal.BackgroundColor = [0.6784 0.1294 0.451];
            app.titreSignal.FontSize = 36;
            app.titreSignal.Position = [5 699 1316 52];

            % Create contenu2S
            app.contenu2S = uipanel(app.panAccueilS);
            app.contenu2S.ForegroundColor = [0.9412 0.9412 0.9412];
            app.contenu2S.BorderType = 'none';
            app.contenu2S.TitlePosition = 'centertop';
            app.contenu2S.BackgroundColor = [0.102 0.2314 0.3882];
            app.contenu2S.FontSize = 20;
            app.contenu2S.Position = [5 22 1316 179];

            % Create closeSignal
            app.closeSignal = uibutton(app.contenu2S, 'push');
            app.closeSignal.ButtonPushedFcn = createCallbackFcn(app, @closeSignalButtonPushed, true);
            app.closeSignal.Icon = 'sortie.png';
            app.closeSignal.BackgroundColor = [0.2902 0.0784 0.3412];
            app.closeSignal.FontSize = 26;
            app.closeSignal.FontColor = [0.9412 0.9412 0.9412];
            app.closeSignal.Position = [748 100 278 45];
            app.closeSignal.Text = 'Quitter';

            % Create allerMath
            app.allerMath = uibutton(app.contenu2S, 'push');
            app.allerMath.ButtonPushedFcn = createCallbackFcn(app, @allerMathButtonPushed, true);
            app.allerMath.Icon = 'showMenu.png';
            app.allerMath.BackgroundColor = [0.1804 0.4 0.5412];
            app.allerMath.FontSize = 22;
            app.allerMath.FontColor = [0.9412 0.9412 0.9412];
            app.allerMath.Position = [375 100 284 45];
            app.allerMath.Text = 'Aller au Mathématique';

            % Create signRetourneAccueil
            app.signRetourneAccueil = uibutton(app.contenu2S, 'push');
            app.signRetourneAccueil.ButtonPushedFcn = createCallbackFcn(app, @signRetourneAccueilButtonPushed, true);
            app.signRetourneAccueil.Icon = 'accueil.png';
            app.signRetourneAccueil.VerticalAlignment = 'top';
            app.signRetourneAccueil.BackgroundColor = [0.102 0.2314 0.3882];
            app.signRetourneAccueil.FontSize = 24;
            app.signRetourneAccueil.FontColor = [1 1 1];
            app.signRetourneAccueil.Position = [42.5 99 240 46];
            app.signRetourneAccueil.Text = ' Accueil Principal';

            % Create labTitre_14
            app.labTitre_14 = uilabel(app.contenu2S);
            app.labTitre_14.BackgroundColor = [0.102 0.2314 0.3882];
            app.labTitre_14.HorizontalAlignment = 'right';
            app.labTitre_14.FontSize = 14;
            app.labTitre_14.FontColor = [1 1 1];
            app.labTitre_14.Position = [4 34 1062 18];
            app.labTitre_14.Text = 'Copyright Tous droit réservés nomome 10.    Version : 1.03.14.2021             ';

            % Create contenu1S
            app.contenu1S = uipanel(app.panAccueilS);
            app.contenu1S.ForegroundColor = [0 1 1];
            app.contenu1S.BorderType = 'none';
            app.contenu1S.TitlePosition = 'centertop';
            app.contenu1S.Title = 'Je vous souhait la bienvenu de cette partie';
            app.contenu1S.BackgroundColor = [0.1294 0.2588 0.4196];
            app.contenu1S.FontSize = 22;
            app.contenu1S.Position = [5 209 1316 455];

            % Create vectSourceMat_9
            app.vectSourceMat_9 = uipanel(app.contenu1S);
            app.vectSourceMat_9.ForegroundColor = [0 1 1];
            app.vectSourceMat_9.BorderType = 'none';
            app.vectSourceMat_9.TitlePosition = 'centertop';
            app.vectSourceMat_9.Title = 'Indication sur le traçage de signal';
            app.vectSourceMat_9.BackgroundColor = [0.149 0.251 0.4196];
            app.vectSourceMat_9.FontSize = 22;
            app.vectSourceMat_9.Position = [7 12 1310 201];

            % Create lab4_3
            app.lab4_3 = uilabel(app.vectSourceMat_9);
            app.lab4_3.BackgroundColor = [0.1294 0.2588 0.4196];
            app.lab4_3.HorizontalAlignment = 'center';
            app.lab4_3.VerticalAlignment = 'center';
            app.lab4_3.FontSize = 22;
            app.lab4_3.FontColor = [0.9804 1 0.4902];
            app.lab4_3.Position = [6.5 6 1299 29];
            app.lab4_3.Text = 'Alors, bonne continuation à vous !';

            % Create signalIndication
            app.signalIndication = uitextarea(app.vectSourceMat_9);
            app.signalIndication.Editable = 'off';
            app.signalIndication.FontSize = 18;
            app.signalIndication.FontColor = [0.9412 0.9412 0.9412];
            app.signalIndication.BackgroundColor = [0.1294 0.2588 0.4392];
            app.signalIndication.Position = [53 49 1188 108];
            app.signalIndication.Value = {' '; '                Utiliser l''icone windows en haut à gauche pour voir les différentes de traçage d''un signal '; '                Sur le traçage des signals, vous devez utiliser un seul unique variable pour qu''il soit bien fonctionnée.'; '                Utiliser le caractère [ t ] pour le nom du variable'};

            % Create bienvenuAccueil
            app.bienvenuAccueil = uitextarea(app.contenu1S);
            app.bienvenuAccueil.Editable = 'off';
            app.bienvenuAccueil.FontSize = 20;
            app.bienvenuAccueil.FontColor = [0.9412 0.9412 0.9412];
            app.bienvenuAccueil.BackgroundColor = [0.1294 0.2588 0.4392];
            app.bienvenuAccueil.Position = [59 245 1188 145];
            app.bienvenuAccueil.Value = {''; '                 Le traitement de signal est une representation graphique des informations par une fonction'; '                 Lors de transmission de ces informations il existe un bruit qui perturbe le decodage de ces données avant '; '                 d''arrivé au destinateur, mais il y a un autre signal aussi appelée bruit qui peut etre embrouillé le signal utile '; '                 qui porte des informations et ce pour cela qu''on l''intervienne pour traiter ces signal'; ''};

            % Create tabImg
            app.tabImg = uitab(app.tableauM);
            app.tabImg.Title = 'TRAITEMENT D''IMAGE';
            app.tabImg.BackgroundColor = [0.102 0.3216 0.4392];
            app.tabImg.HandleVisibility = 'off';

            % Create accueil
            app.accueil = uipanel(app.fen);
            app.accueil.BorderType = 'none';
            app.accueil.BackgroundColor = [1 0.6196 0.902];
            app.accueil.HandleVisibility = 'off';
            app.accueil.Position = [1 1 1400 850];

            % Create accueilP
            app.accueilP = uipanel(app.accueil);
            app.accueilP.BorderType = 'none';
            app.accueilP.BackgroundColor = [0.0784 0.3294 0.4706];
            app.accueilP.Position = [2 1 1398 791];

            % Create labAccueil
            app.labAccueil = uilabel(app.accueilP);
            app.labAccueil.BackgroundColor = [0.5098 0.349 0.5216];
            app.labAccueil.HorizontalAlignment = 'center';
            app.labAccueil.VerticalAlignment = 'center';
            app.labAccueil.FontName = 'Bell MT';
            app.labAccueil.FontSize = 36;
            app.labAccueil.FontColor = [1 1 1];
            app.labAccueil.Position = [50 713 1311 59];
            app.labAccueil.Text = 'Je vous souhaite la bienvenu sur cette projet';

            % Create panT
            app.panT = uipanel(app.accueilP);
            app.panT.ForegroundColor = [0.9804 0.8784 0.9216];
            app.panT.BorderType = 'none';
            app.panT.TitlePosition = 'centertop';
            app.panT.Title = 'Page d''accueil';
            app.panT.BackgroundColor = [0.1804 0.3412 0.4588];
            app.panT.FontSize = 36;
            app.panT.Position = [50 647 1311 53];

            % Create modUtil
            app.modUtil = uipanel(app.accueilP);
            app.modUtil.ForegroundColor = [0 1 1];
            app.modUtil.BorderType = 'none';
            app.modUtil.TitlePosition = 'centertop';
            app.modUtil.Title = 'Utilisation du logiciel';
            app.modUtil.BackgroundColor = [0.1098 0.3098 0.4392];
            app.modUtil.FontSize = 22;
            app.modUtil.Position = [50 54 1311 588];

            % Create lab1_2
            app.lab1_2 = uilabel(app.modUtil);
            app.lab1_2.BackgroundColor = [0.1098 0.3098 0.4392];
            app.lab1_2.VerticalAlignment = 'center';
            app.lab1_2.FontSize = 22;
            app.lab1_2.FontColor = [1 1 1];
            app.lab1_2.Position = [0.5 479 1301 29];
            app.lab1_2.Text = '   Cette logiciel n''est pas difficile apprendre mais juste besoin de connaissance sur';

            % Create lab2_2
            app.lab2_2 = uilabel(app.modUtil);
            app.lab2_2.BackgroundColor = [0.1098 0.3098 0.4392];
            app.lab2_2.VerticalAlignment = 'center';
            app.lab2_2.FontSize = 22;
            app.lab2_2.FontColor = [1 1 1];
            app.lab2_2.Position = [0.5 439 1301 29];
            app.lab2_2.Text = '   la matrice , je veux dire, tous le reglement  de calcul sur la matrice doivent etres';

            % Create lab4_2
            app.lab4_2 = uilabel(app.modUtil);
            app.lab4_2.BackgroundColor = [0.1098 0.3098 0.4392];
            app.lab4_2.HorizontalAlignment = 'center';
            app.lab4_2.VerticalAlignment = 'center';
            app.lab4_2.FontSize = 22;
            app.lab4_2.FontColor = [0.9804 1 0.4902];
            app.lab4_2.Position = [0.5 238 1301 29];
            app.lab4_2.Text = 'Alors, bonne continuation à vous !';

            % Create lab3_2
            app.lab3_2 = uilabel(app.modUtil);
            app.lab3_2.BackgroundColor = [0.1098 0.3098 0.4392];
            app.lab3_2.FontSize = 22;
            app.lab3_2.FontColor = [1 1 1];
            app.lab3_2.Position = [0.5 402 1301 29];
            app.lab3_2.Text = '   respectée et pareil pour le traçage d''un signal.';

            % Create versionLog
            app.versionLog = uilabel(app.modUtil);
            app.versionLog.BackgroundColor = [0.1098 0.3098 0.4392];
            app.versionLog.HorizontalAlignment = 'right';
            app.versionLog.VerticalAlignment = 'center';
            app.versionLog.FontSize = 14;
            app.versionLog.FontColor = [1 1 1];
            app.versionLog.Position = [0.5 12 1301 18];
            app.versionLog.Text = 'Copyright tous droit réserver : 01.03.21.00.32.52                ';

            % Create principal_Aller_au_Math
            app.principal_Aller_au_Math = uibutton(app.modUtil, 'push');
            app.principal_Aller_au_Math.ButtonPushedFcn = createCallbackFcn(app, @allerMathButtonPushed, true);
            app.principal_Aller_au_Math.Icon = 'showMenu.png';
            app.principal_Aller_au_Math.BackgroundColor = [0.1098 0.3098 0.451];
            app.principal_Aller_au_Math.FontSize = 18;
            app.principal_Aller_au_Math.FontWeight = 'bold';
            app.principal_Aller_au_Math.FontColor = [1 1 1];
            app.principal_Aller_au_Math.Position = [102.5 99 279 46];
            app.principal_Aller_au_Math.Text = 'Aller au Mathématique';

            % Create principalAller_auSignal
            app.principalAller_auSignal = uibutton(app.modUtil, 'push');
            app.principalAller_auSignal.ButtonPushedFcn = createCallbackFcn(app, @allerAuSignalBtnButtonPushed, true);
            app.principalAller_auSignal.Icon = 'deconnect.png';
            app.principalAller_auSignal.BackgroundColor = [0.1098 0.3098 0.451];
            app.principalAller_auSignal.FontSize = 18;
            app.principalAller_auSignal.FontWeight = 'bold';
            app.principalAller_auSignal.FontColor = [1 1 1];
            app.principalAller_auSignal.Position = [417 99 219 46];
            app.principalAller_auSignal.Text = 'Aller au Signal';

            % Create principal_Aide
            app.principal_Aide = uibutton(app.modUtil, 'push');
            app.principal_Aide.ButtonPushedFcn = createCallbackFcn(app, @principal_AideButtonPushed, true);
            app.principal_Aide.Icon = 'aide.png';
            app.principal_Aide.BackgroundColor = [0.1098 0.3098 0.451];
            app.principal_Aide.FontSize = 18;
            app.principal_Aide.FontColor = [1 1 1];
            app.principal_Aide.Position = [1176 99 106 46];
            app.principal_Aide.Text = ' Aide';

            % Create principal_Apropos
            app.principal_Apropos = uibutton(app.modUtil, 'push');
            app.principal_Apropos.ButtonPushedFcn = createCallbackFcn(app, @principal_AproposButtonPushed, true);
            app.principal_Apropos.Icon = 'apropos.png';
            app.principal_Apropos.BackgroundColor = [0.1098 0.3098 0.451];
            app.principal_Apropos.FontSize = 18;
            app.principal_Apropos.FontColor = [1 1 1];
            app.principal_Apropos.Position = [1016 99 139 46];
            app.principal_Apropos.Text = ' A propos';

            % Create quitPrincipalBtn
            app.quitPrincipalBtn = uibutton(app.modUtil, 'push');
            app.quitPrincipalBtn.ButtonPushedFcn = createCallbackFcn(app, @quitPrincipalBtnButtonPushed, true);
            app.quitPrincipalBtn.Icon = 'sortie.png';
            app.quitPrincipalBtn.BackgroundColor = [0.3882 0.2118 0.4118];
            app.quitPrincipalBtn.FontSize = 18;
            app.quitPrincipalBtn.FontWeight = 'bold';
            app.quitPrincipalBtn.FontColor = [1 1 1];
            app.quitPrincipalBtn.Position = [681 99 268 46];
            app.quitPrincipalBtn.Text = 'Quitter';

            % Create titre
            app.titre = uilabel(app.accueil);
            app.titre.BackgroundColor = [0.0784 0.702 0.8196];
            app.titre.HorizontalAlignment = 'center';
            app.titre.VerticalAlignment = 'center';
            app.titre.FontName = 'Bell MT';
            app.titre.FontSize = 26;
            app.titre.FontWeight = 'bold';
            app.titre.FontColor = [1 1 1];
            app.titre.Position = [2 793 1398 57];
            app.titre.Text = 'PROJET UTILITAIRE POUR IMAGE AVEC LE TRAITEMENT DE  SIGNAL ET DU MATRICE ';
        end
    end

    methods (Access = public)

        % Construct app
        function app = projet_utilitaire

            % Create and configure components
            createComponents(app)

            % Register the app with App Designer
            registerApp(app, app.fen)

            if nargout == 0
                clear app
            end
        end

        % Code that executes before app deletion
        function delete(app)

            % Delete UIFigure when app is deleted
            delete(app.fen)
        end
    end
end